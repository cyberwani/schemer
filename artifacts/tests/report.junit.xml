<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="" tests="742" assertions="804" failures="0" errors="0" time="78.924493">
    <testsuite name="Eloquent\Schemer\Constraint\Factory\MetaSchemaFactoryTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Constraint/Factory/MetaSchemaFactoryTest.php" namespace="Eloquent\Schemer\Constraint\Factory" fullPackage="Eloquent.Schemer.Constraint.Factory" tests="1" assertions="1" failures="0" errors="0" time="0.025379">
      <testcase name="testCreate" class="Eloquent\Schemer\Constraint\Factory\MetaSchemaFactoryTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Constraint/Factory/MetaSchemaFactoryTest.php" line="25" assertions="1" time="0.025379"/>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Constraint\Factory\SchemaFactoryTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Constraint/Factory/SchemaFactoryTest.php" namespace="Eloquent\Schemer\Constraint\Factory" fullPackage="Eloquent.Schemer.Constraint.Factory" tests="1" assertions="1" failures="0" errors="0" time="0.035889">
      <testcase name="testRecursiveSchemaCreation" class="Eloquent\Schemer\Constraint\Factory\SchemaFactoryTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Constraint/Factory/SchemaFactoryTest.php" line="37" assertions="1" time="0.035889"/>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Pointer\PointerFactoryTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Pointer/PointerFactoryTest.php" namespace="Eloquent\Schemer\Pointer" fullPackage="Eloquent.Schemer.Pointer" tests="4" assertions="7" failures="0" errors="0" time="0.042068">
      <testsuite name="Eloquent\Schemer\Pointer\PointerFactoryTest::testCreate" tests="3" assertions="6" failures="0" errors="0" time="0.035845">
        <testcase name="testCreate with data set &quot;Empty pointer&quot;" assertions="2" time="0.019243"/>
        <testcase name="testCreate with data set &quot;Pointer with single empty string atom&quot;" assertions="2" time="0.006813"/>
        <testcase name="testCreate with data set &quot;Escaped characters in atoms&quot;" assertions="2" time="0.009789"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Pointer\PointerFactoryTest::testCreateFailure" tests="1" assertions="1" failures="0" errors="0" time="0.006223">
        <testcase name="testCreateFailure with data set &quot;No leading separator&quot;" assertions="1" time="0.006223"/>
      </testsuite>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Pointer\PointerTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Pointer/PointerTest.php" namespace="Eloquent\Schemer\Pointer" fullPackage="Eloquent.Schemer.Pointer" tests="3" assertions="3" failures="0" errors="0" time="0.011615">
      <testsuite name="Eloquent\Schemer\Pointer\PointerTest::testString" tests="3" assertions="3" failures="0" errors="0" time="0.011615">
        <testcase name="testString with data set &quot;Empty pointer&quot;" assertions="1" time="0.003788"/>
        <testcase name="testString with data set &quot;Pointer with single empty string atom&quot;" assertions="1" time="0.003811"/>
        <testcase name="testString with data set &quot;Escaped characters in atoms&quot;" assertions="1" time="0.004016"/>
      </testsuite>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Pointer\Resolver\PointerResolverTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Pointer/Resolver/PointerResolverTest.php" namespace="Eloquent\Schemer\Pointer\Resolver" fullPackage="Eloquent.Schemer.Pointer.Resolver" tests="12" assertions="24" failures="0" errors="0" time="0.239215">
      <testsuite name="Eloquent\Schemer\Pointer\Resolver\PointerResolverTest::testResolver" tests="12" assertions="24" failures="0" errors="0" time="0.239215">
        <testcase name="testResolver with data set &quot;spec-examples.json / example 1&quot;" assertions="2" time="0.042121"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 2&quot;" assertions="2" time="0.021531"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 3&quot;" assertions="2" time="0.018297"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 4&quot;" assertions="2" time="0.017460"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 5&quot;" assertions="2" time="0.017428"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 6&quot;" assertions="2" time="0.017423"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 7&quot;" assertions="2" time="0.017515"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 8&quot;" assertions="2" time="0.017514"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 9&quot;" assertions="2" time="0.017506"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 10&quot;" assertions="2" time="0.017448"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 11&quot;" assertions="2" time="0.017450"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 12&quot;" assertions="2" time="0.017522"/>
      </testsuite>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Reader\ReaderTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reader/ReaderTest.php" namespace="Eloquent\Schemer\Reader" fullPackage="Eloquent.Schemer.Reader" tests="3" assertions="6" failures="0" errors="0" time="0.046551">
      <testcase name="testReadStringJson" class="Eloquent\Schemer\Reader\ReaderTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reader/ReaderTest.php" line="32" assertions="2" time="0.016104"/>
      <testcase name="testReadStringToml" class="Eloquent\Schemer\Reader\ReaderTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reader/ReaderTest.php" line="45" assertions="2" time="0.013124"/>
      <testcase name="testReadStringYaml" class="Eloquent\Schemer\Reader\ReaderTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reader/ReaderTest.php" line="57" assertions="2" time="0.017323"/>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Reference\ReferenceResolverTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reference/ReferenceResolverTest.php" namespace="Eloquent\Schemer\Reference" fullPackage="Eloquent.Schemer.Reference" tests="16" assertions="27" failures="0" errors="0" time="4.013026">
      <testsuite name="Eloquent\Schemer\Reference\ReferenceResolverTest::testResolver" tests="8" assertions="16" failures="0" errors="0" time="0.447899">
        <testcase name="testResolver with data set &quot;complete-document&quot;" assertions="2" time="0.047480"/>
        <testcase name="testResolver with data set &quot;explicit-type&quot;" assertions="2" time="0.056736"/>
        <testcase name="testResolver with data set &quot;implicit-type&quot;" assertions="2" time="0.049435"/>
        <testcase name="testResolver with data set &quot;inline&quot;" assertions="2" time="0.042865"/>
        <testcase name="testResolver with data set &quot;nested&quot;" assertions="2" time="0.061197"/>
        <testcase name="testResolver with data set &quot;partial-document&quot;" assertions="2" time="0.045515"/>
        <testcase name="testResolver with data set &quot;switching-scope&quot;" assertions="2" time="0.076221"/>
        <testcase name="testResolver with data set &quot;switching-scope-non-pointer-fragment&quot;" assertions="2" time="0.068450"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Reference\ReferenceResolverTest::testResolveResolvableRecursive" tests="3" assertions="3" failures="0" errors="0" time="0.178749">
        <testcase name="testResolveResolvableRecursive with data set &quot;resolvable-inline.json&quot;" assertions="1" time="0.059179"/>
        <testcase name="testResolveResolvableRecursive with data set &quot;resolvable-external.json&quot;" assertions="1" time="0.054183"/>
        <testcase name="testResolveResolvableRecursive with data set &quot;resolvable-external-switching-scope.json&quot;" assertions="1" time="0.065387"/>
      </testsuite>
      <testcase name="testResolveResolvableMetaSchema" class="Eloquent\Schemer\Reference\ReferenceResolverTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reference/ReferenceResolverTest.php" line="101" assertions="1" time="1.914078"/>
      <testcase name="testResolveResolvableJsonSchemaMetaSchema" class="Eloquent\Schemer\Reference\ReferenceResolverTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reference/ReferenceResolverTest.php" line="113" assertions="1" time="1.333795"/>
      <testcase name="testResolveResolvableRecursiveFucked" class="Eloquent\Schemer\Reference\ReferenceResolverTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reference/ReferenceResolverTest.php" line="125" assertions="1" time="0.043842"/>
      <testcase name="testResolveUnresolvableRecursiveInline" class="Eloquent\Schemer\Reference\ReferenceResolverTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reference/ReferenceResolverTest.php" line="137" assertions="3" time="0.048071"/>
      <testcase name="testResolveUnresolvableRecursiveExternal" class="Eloquent\Schemer\Reference\ReferenceResolverTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reference/ReferenceResolverTest.php" line="151" assertions="2" time="0.046592"/>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Reference\ResolutionScopeMapTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reference/ResolutionScopeMapTest.php" namespace="Eloquent\Schemer\Reference" fullPackage="Eloquent.Schemer.Reference" tests="9" assertions="17" failures="0" errors="0" time="0.398304">
      <testsuite name="Eloquent\Schemer\Reference\ResolutionScopeMapTest::testPointerByUri" tests="9" assertions="17" failures="0" errors="0" time="0.398304">
        <testcase name="testPointerByUri with data set &quot;document root match&quot;" assertions="2" time="0.079252"/>
        <testcase name="testPointerByUri with data set &quot;document root match with pointer-fragment&quot;" assertions="2" time="0.042251"/>
        <testcase name="testPointerByUri with data set &quot;document root match with non-pointer fragment&quot;" assertions="2" time="0.038196"/>
        <testcase name="testPointerByUri with data set &quot;later overlapping pointer-fragment match ignored&quot;" assertions="2" time="0.038964"/>
        <testcase name="testPointerByUri with data set &quot;exact URI match&quot;" assertions="2" time="0.037804"/>
        <testcase name="testPointerByUri with data set &quot;URI match with pointer-fragment&quot;" assertions="2" time="0.039996"/>
        <testcase name="testPointerByUri with data set &quot;URI match with non-pointer fragment&quot;" assertions="2" time="0.038595"/>
        <testcase name="testPointerByUri with data set &quot;URI match with parent pointer-fragment&quot;" assertions="2" time="0.045601"/>
        <testcase name="testPointerByUri with data set &quot;non match&quot;" assertions="1" time="0.037644"/>
      </testsuite>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Reference\SwitchingResolutionScopeMapFactoryTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reference/SwitchingResolutionScopeMapFactoryTest.php" namespace="Eloquent\Schemer\Reference" fullPackage="Eloquent.Schemer.Reference" tests="2" assertions="6" failures="0" errors="0" time="0.092400">
      <testsuite name="Eloquent\Schemer\Reference\SwitchingResolutionScopeMapFactoryTest::testFactory" tests="2" assertions="6" failures="0" errors="0" time="0.092400">
        <testcase name="testFactory with data set &quot;unspecified-root.json&quot;" assertions="3" time="0.022899"/>
        <testcase name="testFactory with data set &quot;spec-example.json&quot;" assertions="3" time="0.069501"/>
      </testsuite>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" namespace="Eloquent\Schemer\Uri" fullPackage="Eloquent.Schemer.Uri" tests="50" assertions="60" failures="0" errors="0" time="0.355325">
      <testsuite name="Eloquent\Schemer\Uri\HttpUriTest::testValidScheme" tests="4" assertions="4" failures="0" errors="0" time="0.019838">
        <testcase name="testValidScheme with data set #0" assertions="1" time="0.005913"/>
        <testcase name="testValidScheme with data set #1" assertions="1" time="0.004764"/>
        <testcase name="testValidScheme with data set #2" assertions="1" time="0.004564"/>
        <testcase name="testValidScheme with data set #3" assertions="1" time="0.004597"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\HttpUriTest::testInvalidScheme" tests="4" assertions="4" failures="0" errors="0" time="0.018216">
        <testcase name="testInvalidScheme with data set #0" assertions="1" time="0.005363"/>
        <testcase name="testInvalidScheme with data set #1" assertions="1" time="0.004310"/>
        <testcase name="testInvalidScheme with data set #2" assertions="1" time="0.004253"/>
        <testcase name="testInvalidScheme with data set #3" assertions="1" time="0.004290"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\HttpUriTest::testValidateSchemeInvalid" tests="4" assertions="4" failures="0" errors="0" time="0.015482">
        <testcase name="testValidateSchemeInvalid with data set #0" assertions="1" time="0.003910"/>
        <testcase name="testValidateSchemeInvalid with data set #1" assertions="1" time="0.003844"/>
        <testcase name="testValidateSchemeInvalid with data set #2" assertions="1" time="0.003858"/>
        <testcase name="testValidateSchemeInvalid with data set #3" assertions="1" time="0.003870"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\HttpUriTest::testValidateHost" tests="21" assertions="21" failures="0" errors="0" time="0.173904">
        <testcase name="testValidateHost with data set #0" assertions="1" time="0.010359"/>
        <testcase name="testValidateHost with data set #1" assertions="1" time="0.006601"/>
        <testcase name="testValidateHost with data set #2" assertions="1" time="0.006835"/>
        <testcase name="testValidateHost with data set #3" assertions="1" time="0.008375"/>
        <testcase name="testValidateHost with data set #4" assertions="1" time="0.007939"/>
        <testcase name="testValidateHost with data set #5" assertions="1" time="0.007433"/>
        <testcase name="testValidateHost with data set #6" assertions="1" time="0.011480"/>
        <testcase name="testValidateHost with data set #7" assertions="1" time="0.012658"/>
        <testcase name="testValidateHost with data set #8" assertions="1" time="0.009047"/>
        <testcase name="testValidateHost with data set #9" assertions="1" time="0.009002"/>
        <testcase name="testValidateHost with data set #10" assertions="1" time="0.007730"/>
        <testcase name="testValidateHost with data set #11" assertions="1" time="0.008116"/>
        <testcase name="testValidateHost with data set #12" assertions="1" time="0.008510"/>
        <testcase name="testValidateHost with data set #13" assertions="1" time="0.008273"/>
        <testcase name="testValidateHost with data set #14" assertions="1" time="0.007061"/>
        <testcase name="testValidateHost with data set #15" assertions="1" time="0.009085"/>
        <testcase name="testValidateHost with data set #16" assertions="1" time="0.007602"/>
        <testcase name="testValidateHost with data set #17" assertions="1" time="0.006123"/>
        <testcase name="testValidateHost with data set #18" assertions="1" time="0.007793"/>
        <testcase name="testValidateHost with data set #19" assertions="1" time="0.007644"/>
        <testcase name="testValidateHost with data set #20" assertions="1" time="0.006238"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\HttpUriTest::testNormalizationRemovesPort" tests="5" assertions="5" failures="0" errors="0" time="0.038164">
        <testcase name="testNormalizationRemovesPort with data set #0" assertions="1" time="0.008149"/>
        <testcase name="testNormalizationRemovesPort with data set #1" assertions="1" time="0.007603"/>
        <testcase name="testNormalizationRemovesPort with data set #2" assertions="1" time="0.007493"/>
        <testcase name="testNormalizationRemovesPort with data set #3" assertions="1" time="0.007525"/>
        <testcase name="testNormalizationRemovesPort with data set #4" assertions="1" time="0.007394"/>
      </testsuite>
      <testcase name="testUserIsNullByDefaultWhenNoUserInfoIsProvided" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="159" assertions="1" time="0.006862"/>
      <testcase name="testPasswordIsNullByDefaultWhenNoUserInfoIsProvided" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="166" assertions="1" time="0.006831"/>
      <testcase name="testCanParseUsernameAndPasswordFromUriNotContainingPort" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="173" assertions="3" time="0.009671"/>
      <testcase name="testCanParseUsernameAndPasswordFromUriContainingPort" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="182" assertions="3" time="0.010704"/>
      <testcase name="testCanParseUsernameContainingAtMarkFromUri" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="191" assertions="3" time="0.008472"/>
      <testcase name="testCanParsePasswordContainingAtMarkFromUri" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="200" assertions="3" time="0.008208"/>
      <testcase name="testUserInfoCanOmitPassword" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="209" assertions="3" time="0.007987"/>
      <testcase name="testGetPortReturnsDefaultPortHttp" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="218" assertions="1" time="0.006315"/>
      <testcase name="testGetPortReturnsDefaultPortHttps" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="224" assertions="1" time="0.006208"/>
      <testcase name="testGetPortDoesntModifyUrlHttp" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="230" assertions="1" time="0.006409"/>
      <testcase name="testGetPortDoesntModifyUrlHttps" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="238" assertions="1" time="0.006472"/>
      <testcase name="testValidHostTypesWithUnderScore" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="246" assertions="1" time="0.005582"/>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Uri\UriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/UriTest.php" namespace="Eloquent\Schemer\Uri" fullPackage="Eloquent.Schemer.Uri" tests="469" assertions="474" failures="0" errors="0" time="2.940548">
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testParseComposeUri" tests="30" assertions="30" failures="0" errors="0" time="0.187457">
        <testcase name="testParseComposeUri with data set #0" assertions="1" time="0.005534"/>
        <testcase name="testParseComposeUri with data set #1" assertions="1" time="0.006281"/>
        <testcase name="testParseComposeUri with data set #2" assertions="1" time="0.006590"/>
        <testcase name="testParseComposeUri with data set #3" assertions="1" time="0.005204"/>
        <testcase name="testParseComposeUri with data set #4" assertions="1" time="0.005204"/>
        <testcase name="testParseComposeUri with data set #5" assertions="1" time="0.005286"/>
        <testcase name="testParseComposeUri with data set #6" assertions="1" time="0.005270"/>
        <testcase name="testParseComposeUri with data set #7" assertions="1" time="0.005401"/>
        <testcase name="testParseComposeUri with data set #8" assertions="1" time="0.005171"/>
        <testcase name="testParseComposeUri with data set #9" assertions="1" time="0.006213"/>
        <testcase name="testParseComposeUri with data set #10" assertions="1" time="0.006512"/>
        <testcase name="testParseComposeUri with data set #11" assertions="1" time="0.006483"/>
        <testcase name="testParseComposeUri with data set #12" assertions="1" time="0.006520"/>
        <testcase name="testParseComposeUri with data set #13" assertions="1" time="0.006587"/>
        <testcase name="testParseComposeUri with data set #14" assertions="1" time="0.006450"/>
        <testcase name="testParseComposeUri with data set #15" assertions="1" time="0.012133"/>
        <testcase name="testParseComposeUri with data set #16" assertions="1" time="0.005268"/>
        <testcase name="testParseComposeUri with data set #17" assertions="1" time="0.005233"/>
        <testcase name="testParseComposeUri with data set #18" assertions="1" time="0.005005"/>
        <testcase name="testParseComposeUri with data set #19" assertions="1" time="0.006307"/>
        <testcase name="testParseComposeUri with data set #20" assertions="1" time="0.006496"/>
        <testcase name="testParseComposeUri with data set #21" assertions="1" time="0.005387"/>
        <testcase name="testParseComposeUri with data set #22" assertions="1" time="0.007290"/>
        <testcase name="testParseComposeUri with data set #23" assertions="1" time="0.006380"/>
        <testcase name="testParseComposeUri with data set #24" assertions="1" time="0.006498"/>
        <testcase name="testParseComposeUri with data set #25" assertions="1" time="0.007936"/>
        <testcase name="testParseComposeUri with data set #26" assertions="1" time="0.006766"/>
        <testcase name="testParseComposeUri with data set #27" assertions="1" time="0.005919"/>
        <testcase name="testParseComposeUri with data set #28" assertions="1" time="0.006499"/>
        <testcase name="testParseComposeUri with data set #29" assertions="1" time="0.005634"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testComposeNewUriAndCastToString" tests="7" assertions="7" failures="0" errors="0" time="0.041883">
        <testcase name="testComposeNewUriAndCastToString with data set #0" assertions="1" time="0.006879"/>
        <testcase name="testComposeNewUriAndCastToString with data set #1" assertions="1" time="0.005453"/>
        <testcase name="testComposeNewUriAndCastToString with data set #2" assertions="1" time="0.006686"/>
        <testcase name="testComposeNewUriAndCastToString with data set #3" assertions="1" time="0.005076"/>
        <testcase name="testComposeNewUriAndCastToString with data set #4" assertions="1" time="0.006081"/>
        <testcase name="testComposeNewUriAndCastToString with data set #5" assertions="1" time="0.006535"/>
        <testcase name="testComposeNewUriAndCastToString with data set #6" assertions="1" time="0.005173"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testParseScheme" tests="7" assertions="7" failures="0" errors="0" time="0.033797">
        <testcase name="testParseScheme with data set #0" assertions="1" time="0.004748"/>
        <testcase name="testParseScheme with data set #1" assertions="1" time="0.004678"/>
        <testcase name="testParseScheme with data set #2" assertions="1" time="0.005527"/>
        <testcase name="testParseScheme with data set #3" assertions="1" time="0.004726"/>
        <testcase name="testParseScheme with data set #4" assertions="1" time="0.004826"/>
        <testcase name="testParseScheme with data set #5" assertions="1" time="0.004677"/>
        <testcase name="testParseScheme with data set #6" assertions="1" time="0.004615"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testParseSchemeInvalidInput" tests="4" assertions="4" failures="0" errors="0" time="0.017578">
        <testcase name="testParseSchemeInvalidInput with data set #0" assertions="1" time="0.004367"/>
        <testcase name="testParseSchemeInvalidInput with data set #1" assertions="1" time="0.004366"/>
        <testcase name="testParseSchemeInvalidInput with data set #2" assertions="1" time="0.004473"/>
        <testcase name="testParseSchemeInvalidInput with data set #3" assertions="1" time="0.004372"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testMagicToStringEmptyIfInvalid" tests="4" assertions="4" failures="0" errors="0" time="0.020422">
        <testcase name="testMagicToStringEmptyIfInvalid with data set #0" assertions="1" time="0.005472"/>
        <testcase name="testMagicToStringEmptyIfInvalid with data set #1" assertions="1" time="0.004986"/>
        <testcase name="testMagicToStringEmptyIfInvalid with data set #2" assertions="1" time="0.005000"/>
        <testcase name="testMagicToStringEmptyIfInvalid with data set #3" assertions="1" time="0.004964"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testToStringThrowsExceptionIfInvalid" tests="4" assertions="4" failures="0" errors="0" time="0.017585">
        <testcase name="testToStringThrowsExceptionIfInvalid with data set #0" assertions="1" time="0.004418"/>
        <testcase name="testToStringThrowsExceptionIfInvalid with data set #1" assertions="1" time="0.004370"/>
        <testcase name="testToStringThrowsExceptionIfInvalid with data set #2" assertions="1" time="0.004396"/>
        <testcase name="testToStringThrowsExceptionIfInvalid with data set #3" assertions="1" time="0.004401"/>
      </testsuite>
      <testcase name="testCanParseMalformedUrlZF11286" class="Eloquent\Schemer\Uri\UriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/UriTest.php" line="109" assertions="1" time="0.007599"/>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testGetScheme" tests="7" assertions="7" failures="0" errors="0" time="0.037978">
        <testcase name="testGetScheme with data set #0" assertions="1" time="0.006920"/>
        <testcase name="testGetScheme with data set #1" assertions="1" time="0.004993"/>
        <testcase name="testGetScheme with data set #2" assertions="1" time="0.005980"/>
        <testcase name="testGetScheme with data set #3" assertions="1" time="0.004181"/>
        <testcase name="testGetScheme with data set #4" assertions="1" time="0.005851"/>
        <testcase name="testGetScheme with data set #5" assertions="1" time="0.005847"/>
        <testcase name="testGetScheme with data set #6" assertions="1" time="0.004206"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testGetUserInfo" tests="7" assertions="7" failures="0" errors="0" time="0.034965">
        <testcase name="testGetUserInfo with data set #0" assertions="1" time="0.005331"/>
        <testcase name="testGetUserInfo with data set #1" assertions="1" time="0.004261"/>
        <testcase name="testGetUserInfo with data set #2" assertions="1" time="0.006047"/>
        <testcase name="testGetUserInfo with data set #3" assertions="1" time="0.004225"/>
        <testcase name="testGetUserInfo with data set #4" assertions="1" time="0.005691"/>
        <testcase name="testGetUserInfo with data set #5" assertions="1" time="0.005256"/>
        <testcase name="testGetUserInfo with data set #6" assertions="1" time="0.004154"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testGetHost" tests="7" assertions="7" failures="0" errors="0" time="0.036919">
        <testcase name="testGetHost with data set #0" assertions="1" time="0.005940"/>
        <testcase name="testGetHost with data set #1" assertions="1" time="0.004889"/>
        <testcase name="testGetHost with data set #2" assertions="1" time="0.005988"/>
        <testcase name="testGetHost with data set #3" assertions="1" time="0.004160"/>
        <testcase name="testGetHost with data set #4" assertions="1" time="0.005847"/>
        <testcase name="testGetHost with data set #5" assertions="1" time="0.005857"/>
        <testcase name="testGetHost with data set #6" assertions="1" time="0.004238"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testGetPort" tests="7" assertions="7" failures="0" errors="0" time="0.034992">
        <testcase name="testGetPort with data set #0" assertions="1" time="0.005345"/>
        <testcase name="testGetPort with data set #1" assertions="1" time="0.004308"/>
        <testcase name="testGetPort with data set #2" assertions="1" time="0.005389"/>
        <testcase name="testGetPort with data set #3" assertions="1" time="0.004376"/>
        <testcase name="testGetPort with data set #4" assertions="1" time="0.005905"/>
        <testcase name="testGetPort with data set #5" assertions="1" time="0.005347"/>
        <testcase name="testGetPort with data set #6" assertions="1" time="0.004322"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testGetPath" tests="7" assertions="7" failures="0" errors="0" time="0.043393">
        <testcase name="testGetPath with data set #0" assertions="1" time="0.006014"/>
        <testcase name="testGetPath with data set #1" assertions="1" time="0.005089"/>
        <testcase name="testGetPath with data set #2" assertions="1" time="0.006216"/>
        <testcase name="testGetPath with data set #3" assertions="1" time="0.005576"/>
        <testcase name="testGetPath with data set #4" assertions="1" time="0.006172"/>
        <testcase name="testGetPath with data set #5" assertions="1" time="0.006175"/>
        <testcase name="testGetPath with data set #6" assertions="1" time="0.008151"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testGetQuery" tests="7" assertions="7" failures="0" errors="0" time="0.035194">
        <testcase name="testGetQuery with data set #0" assertions="1" time="0.005949"/>
        <testcase name="testGetQuery with data set #1" assertions="1" time="0.004347"/>
        <testcase name="testGetQuery with data set #2" assertions="1" time="0.005382"/>
        <testcase name="testGetQuery with data set #3" assertions="1" time="0.004571"/>
        <testcase name="testGetQuery with data set #4" assertions="1" time="0.005468"/>
        <testcase name="testGetQuery with data set #5" assertions="1" time="0.005231"/>
        <testcase name="testGetQuery with data set #6" assertions="1" time="0.004246"/>
      </testsuite>
      <testcase name="testGetQueryAsArrayReturnsCorrectArray" class="Eloquent\Schemer\Uri\UriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/UriTest.php" line="227" assertions="2" time="0.011981"/>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testGetFragment" tests="7" assertions="7" failures="0" errors="0" time="0.034203">
        <testcase name="testGetFragment with data set #0" assertions="1" time="0.005438"/>
        <testcase name="testGetFragment with data set #1" assertions="1" time="0.004331"/>
        <testcase name="testGetFragment with data set #2" assertions="1" time="0.005385"/>
        <testcase name="testGetFragment with data set #3" assertions="1" time="0.004272"/>
        <testcase name="testGetFragment with data set #4" assertions="1" time="0.005351"/>
        <testcase name="testGetFragment with data set #5" assertions="1" time="0.005269"/>
        <testcase name="testGetFragment with data set #6" assertions="1" time="0.004157"/>
      </testsuite>
      <testcase name="testSetSchemeNull" class="Eloquent\Schemer\Uri\UriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/UriTest.php" line="266" assertions="2" time="0.006179"/>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testSetSchemeValid" tests="7" assertions="7" failures="0" errors="0" time="0.033213">
        <testcase name="testSetSchemeValid with data set #0" assertions="1" time="0.004855"/>
        <testcase name="testSetSchemeValid with data set #1" assertions="1" time="0.004749"/>
        <testcase name="testSetSchemeValid with data set #2" assertions="1" time="0.004727"/>
        <testcase name="testSetSchemeValid with data set #3" assertions="1" time="0.004709"/>
        <testcase name="testSetSchemeValid with data set #4" assertions="1" time="0.004756"/>
        <testcase name="testSetSchemeValid with data set #5" assertions="1" time="0.004739"/>
        <testcase name="testSetSchemeValid with data set #6" assertions="1" time="0.004678"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testSetInvalidScheme" tests="5" assertions="5" failures="0" errors="0" time="0.022468">
        <testcase name="testSetInvalidScheme with data set #0" assertions="1" time="0.004485"/>
        <testcase name="testSetInvalidScheme with data set #1" assertions="1" time="0.004515"/>
        <testcase name="testSetInvalidScheme with data set #2" assertions="1" time="0.004550"/>
        <testcase name="testSetInvalidScheme with data set #3" assertions="1" time="0.004482"/>
        <testcase name="testSetInvalidScheme with data set #4" assertions="1" time="0.004436"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testSetGetValidHost" tests="24" assertions="24" failures="0" errors="0" time="0.134997">
        <testcase name="testSetGetValidHost with data set #0" assertions="1" time="0.005143"/>
        <testcase name="testSetGetValidHost with data set #1" assertions="1" time="0.005156"/>
        <testcase name="testSetGetValidHost with data set #2" assertions="1" time="0.005374"/>
        <testcase name="testSetGetValidHost with data set #3" assertions="1" time="0.005247"/>
        <testcase name="testSetGetValidHost with data set #4" assertions="1" time="0.005846"/>
        <testcase name="testSetGetValidHost with data set #5" assertions="1" time="0.005750"/>
        <testcase name="testSetGetValidHost with data set #6" assertions="1" time="0.005729"/>
        <testcase name="testSetGetValidHost with data set #7" assertions="1" time="0.005730"/>
        <testcase name="testSetGetValidHost with data set #8" assertions="1" time="0.005769"/>
        <testcase name="testSetGetValidHost with data set #9" assertions="1" time="0.005884"/>
        <testcase name="testSetGetValidHost with data set #10" assertions="1" time="0.005607"/>
        <testcase name="testSetGetValidHost with data set #11" assertions="1" time="0.005683"/>
        <testcase name="testSetGetValidHost with data set #12" assertions="1" time="0.005687"/>
        <testcase name="testSetGetValidHost with data set #13" assertions="1" time="0.005668"/>
        <testcase name="testSetGetValidHost with data set #14" assertions="1" time="0.005720"/>
        <testcase name="testSetGetValidHost with data set #15" assertions="1" time="0.006253"/>
        <testcase name="testSetGetValidHost with data set #16" assertions="1" time="0.005829"/>
        <testcase name="testSetGetValidHost with data set #17" assertions="1" time="0.005652"/>
        <testcase name="testSetGetValidHost with data set #18" assertions="1" time="0.005128"/>
        <testcase name="testSetGetValidHost with data set #19" assertions="1" time="0.005609"/>
        <testcase name="testSetGetValidHost with data set #20" assertions="1" time="0.005587"/>
        <testcase name="testSetGetValidHost with data set #21" assertions="1" time="0.005643"/>
        <testcase name="testSetGetValidHost with data set #22" assertions="1" time="0.005669"/>
        <testcase name="testSetGetValidHost with data set #23" assertions="1" time="0.005634"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testSetInvalidHost" tests="3" assertions="3" failures="0" errors="0" time="0.020800">
        <testcase name="testSetInvalidHost with data set #0" assertions="1" time="0.006813"/>
        <testcase name="testSetInvalidHost with data set #1" assertions="1" time="0.007238"/>
        <testcase name="testSetInvalidHost with data set #2" assertions="1" time="0.006749"/>
      </testsuite>
      <testcase name="testSetNullHost" class="Eloquent\Schemer\Uri\UriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/UriTest.php" line="331" assertions="1" time="0.005323"/>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testSetQueryFromArray" tests="3" assertions="3" failures="0" errors="0" time="0.014557">
        <testcase name="testSetQueryFromArray with data set #0" assertions="1" time="0.004871"/>
        <testcase name="testSetQueryFromArray with data set #1" assertions="1" time="0.004829"/>
        <testcase name="testSetQueryFromArray with data set #2" assertions="1" time="0.004857"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidUriIsValid" tests="30" assertions="30" failures="0" errors="0" time="0.142714">
        <testcase name="testValidUriIsValid with data set #0" assertions="1" time="0.004349"/>
        <testcase name="testValidUriIsValid with data set #1" assertions="1" time="0.005264"/>
        <testcase name="testValidUriIsValid with data set #2" assertions="1" time="0.005429"/>
        <testcase name="testValidUriIsValid with data set #3" assertions="1" time="0.004244"/>
        <testcase name="testValidUriIsValid with data set #4" assertions="1" time="0.004221"/>
        <testcase name="testValidUriIsValid with data set #5" assertions="1" time="0.004259"/>
        <testcase name="testValidUriIsValid with data set #6" assertions="1" time="0.004229"/>
        <testcase name="testValidUriIsValid with data set #7" assertions="1" time="0.004330"/>
        <testcase name="testValidUriIsValid with data set #8" assertions="1" time="0.004162"/>
        <testcase name="testValidUriIsValid with data set #9" assertions="1" time="0.005305"/>
        <testcase name="testValidUriIsValid with data set #10" assertions="1" time="0.005397"/>
        <testcase name="testValidUriIsValid with data set #11" assertions="1" time="0.005468"/>
        <testcase name="testValidUriIsValid with data set #12" assertions="1" time="0.005636"/>
        <testcase name="testValidUriIsValid with data set #13" assertions="1" time="0.005606"/>
        <testcase name="testValidUriIsValid with data set #14" assertions="1" time="0.005419"/>
        <testcase name="testValidUriIsValid with data set #15" assertions="1" time="0.005416"/>
        <testcase name="testValidUriIsValid with data set #16" assertions="1" time="0.004317"/>
        <testcase name="testValidUriIsValid with data set #17" assertions="1" time="0.004319"/>
        <testcase name="testValidUriIsValid with data set #18" assertions="1" time="0.004278"/>
        <testcase name="testValidUriIsValid with data set #19" assertions="1" time="0.005278"/>
        <testcase name="testValidUriIsValid with data set #20" assertions="1" time="0.005562"/>
        <testcase name="testValidUriIsValid with data set #21" assertions="1" time="0.004209"/>
        <testcase name="testValidUriIsValid with data set #22" assertions="1" time="0.004752"/>
        <testcase name="testValidUriIsValid with data set #23" assertions="1" time="0.004214"/>
        <testcase name="testValidUriIsValid with data set #24" assertions="1" time="0.004189"/>
        <testcase name="testValidUriIsValid with data set #25" assertions="1" time="0.005509"/>
        <testcase name="testValidUriIsValid with data set #26" assertions="1" time="0.004529"/>
        <testcase name="testValidUriIsValid with data set #27" assertions="1" time="0.004349"/>
        <testcase name="testValidUriIsValid with data set #28" assertions="1" time="0.004274"/>
        <testcase name="testValidUriIsValid with data set #29" assertions="1" time="0.004202"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidRelativeUriIsValid" tests="5" assertions="5" failures="0" errors="0" time="0.021281">
        <testcase name="testValidRelativeUriIsValid with data set #0" assertions="1" time="0.004296"/>
        <testcase name="testValidRelativeUriIsValid with data set #1" assertions="1" time="0.004215"/>
        <testcase name="testValidRelativeUriIsValid with data set #2" assertions="1" time="0.004270"/>
        <testcase name="testValidRelativeUriIsValid with data set #3" assertions="1" time="0.004291"/>
        <testcase name="testValidRelativeUriIsValid with data set #4" assertions="1" time="0.004209"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testInvalidUriIsInvalid" tests="4" assertions="4" failures="0" errors="0" time="0.015948">
        <testcase name="testInvalidUriIsInvalid with data set #0" assertions="1" time="0.003994"/>
        <testcase name="testInvalidUriIsInvalid with data set #1" assertions="1" time="0.004020"/>
        <testcase name="testInvalidUriIsInvalid with data set #2" assertions="1" time="0.003969"/>
        <testcase name="testInvalidUriIsInvalid with data set #3" assertions="1" time="0.003965"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testInvalidRelativeUriIsInvalid" tests="6" assertions="6" failures="0" errors="0" time="0.023945">
        <testcase name="testInvalidRelativeUriIsInvalid with data set #0" assertions="1" time="0.003989"/>
        <testcase name="testInvalidRelativeUriIsInvalid with data set #1" assertions="1" time="0.004032"/>
        <testcase name="testInvalidRelativeUriIsInvalid with data set #2" assertions="1" time="0.004050"/>
        <testcase name="testInvalidRelativeUriIsInvalid with data set #3" assertions="1" time="0.003958"/>
        <testcase name="testInvalidRelativeUriIsInvalid with data set #4" assertions="1" time="0.003956"/>
        <testcase name="testInvalidRelativeUriIsInvalid with data set #5" assertions="1" time="0.003960"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidateSchemeValid" tests="7" assertions="7" failures="0" errors="0" time="0.028124">
        <testcase name="testValidateSchemeValid with data set #0" assertions="1" time="0.004007"/>
        <testcase name="testValidateSchemeValid with data set #1" assertions="1" time="0.003984"/>
        <testcase name="testValidateSchemeValid with data set #2" assertions="1" time="0.003943"/>
        <testcase name="testValidateSchemeValid with data set #3" assertions="1" time="0.004089"/>
        <testcase name="testValidateSchemeValid with data set #4" assertions="1" time="0.003992"/>
        <testcase name="testValidateSchemeValid with data set #5" assertions="1" time="0.004037"/>
        <testcase name="testValidateSchemeValid with data set #6" assertions="1" time="0.004072"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidateSchemeInvalid" tests="5" assertions="5" failures="0" errors="0" time="0.019995">
        <testcase name="testValidateSchemeInvalid with data set #0" assertions="1" time="0.004000"/>
        <testcase name="testValidateSchemeInvalid with data set #1" assertions="1" time="0.003988"/>
        <testcase name="testValidateSchemeInvalid with data set #2" assertions="1" time="0.003989"/>
        <testcase name="testValidateSchemeInvalid with data set #3" assertions="1" time="0.004016"/>
        <testcase name="testValidateSchemeInvalid with data set #4" assertions="1" time="0.004002"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidateHostValid" tests="24" assertions="24" failures="0" errors="0" time="0.118058">
        <testcase name="testValidateHostValid with data set #0" assertions="1" time="0.004428"/>
        <testcase name="testValidateHostValid with data set #1" assertions="1" time="0.004368"/>
        <testcase name="testValidateHostValid with data set #2" assertions="1" time="0.004422"/>
        <testcase name="testValidateHostValid with data set #3" assertions="1" time="0.004375"/>
        <testcase name="testValidateHostValid with data set #4" assertions="1" time="0.005050"/>
        <testcase name="testValidateHostValid with data set #5" assertions="1" time="0.005003"/>
        <testcase name="testValidateHostValid with data set #6" assertions="1" time="0.004996"/>
        <testcase name="testValidateHostValid with data set #7" assertions="1" time="0.004992"/>
        <testcase name="testValidateHostValid with data set #8" assertions="1" time="0.005017"/>
        <testcase name="testValidateHostValid with data set #9" assertions="1" time="0.005012"/>
        <testcase name="testValidateHostValid with data set #10" assertions="1" time="0.004971"/>
        <testcase name="testValidateHostValid with data set #11" assertions="1" time="0.004957"/>
        <testcase name="testValidateHostValid with data set #12" assertions="1" time="0.004893"/>
        <testcase name="testValidateHostValid with data set #13" assertions="1" time="0.005081"/>
        <testcase name="testValidateHostValid with data set #14" assertions="1" time="0.005269"/>
        <testcase name="testValidateHostValid with data set #15" assertions="1" time="0.004881"/>
        <testcase name="testValidateHostValid with data set #16" assertions="1" time="0.004937"/>
        <testcase name="testValidateHostValid with data set #17" assertions="1" time="0.004984"/>
        <testcase name="testValidateHostValid with data set #18" assertions="1" time="0.005409"/>
        <testcase name="testValidateHostValid with data set #19" assertions="1" time="0.004969"/>
        <testcase name="testValidateHostValid with data set #20" assertions="1" time="0.004956"/>
        <testcase name="testValidateHostValid with data set #21" assertions="1" time="0.004985"/>
        <testcase name="testValidateHostValid with data set #22" assertions="1" time="0.005127"/>
        <testcase name="testValidateHostValid with data set #23" assertions="1" time="0.004976"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidateHostInvalid" tests="3" assertions="3" failures="0" errors="0" time="0.020699">
        <testcase name="testValidateHostInvalid with data set #0" assertions="1" time="0.006478"/>
        <testcase name="testValidateHostInvalid with data set #1" assertions="1" time="0.007192"/>
        <testcase name="testValidateHostInvalid with data set #2" assertions="1" time="0.007029"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidatePathValid" tests="11" assertions="11" failures="0" errors="0" time="0.047048">
        <testcase name="testValidatePathValid with data set #0" assertions="1" time="0.004506"/>
        <testcase name="testValidatePathValid with data set #1" assertions="1" time="0.004233"/>
        <testcase name="testValidatePathValid with data set #2" assertions="1" time="0.004303"/>
        <testcase name="testValidatePathValid with data set #3" assertions="1" time="0.004217"/>
        <testcase name="testValidatePathValid with data set #4" assertions="1" time="0.004220"/>
        <testcase name="testValidatePathValid with data set #5" assertions="1" time="0.004263"/>
        <testcase name="testValidatePathValid with data set #6" assertions="1" time="0.004839"/>
        <testcase name="testValidatePathValid with data set #7" assertions="1" time="0.004040"/>
        <testcase name="testValidatePathValid with data set #8" assertions="1" time="0.004235"/>
        <testcase name="testValidatePathValid with data set #9" assertions="1" time="0.003999"/>
        <testcase name="testValidatePathValid with data set #10" assertions="1" time="0.004193"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidatePathInvalid" tests="3" assertions="3" failures="0" errors="0" time="0.012591">
        <testcase name="testValidatePathInvalid with data set #0" assertions="1" time="0.004575"/>
        <testcase name="testValidatePathInvalid with data set #1" assertions="1" time="0.004006"/>
        <testcase name="testValidatePathInvalid with data set #2" assertions="1" time="0.004010"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testEncodePathValid" tests="11" assertions="11" failures="0" errors="0" time="0.060482">
        <testcase name="testEncodePathValid with data set #0" assertions="1" time="0.006091"/>
        <testcase name="testEncodePathValid with data set #1" assertions="1" time="0.005124"/>
        <testcase name="testEncodePathValid with data set #2" assertions="1" time="0.005167"/>
        <testcase name="testEncodePathValid with data set #3" assertions="1" time="0.005100"/>
        <testcase name="testEncodePathValid with data set #4" assertions="1" time="0.006134"/>
        <testcase name="testEncodePathValid with data set #5" assertions="1" time="0.006142"/>
        <testcase name="testEncodePathValid with data set #6" assertions="1" time="0.006507"/>
        <testcase name="testEncodePathValid with data set #7" assertions="1" time="0.005953"/>
        <testcase name="testEncodePathValid with data set #8" assertions="1" time="0.004830"/>
        <testcase name="testEncodePathValid with data set #9" assertions="1" time="0.004768"/>
        <testcase name="testEncodePathValid with data set #10" assertions="1" time="0.004666"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testEncodePathInvalid" tests="3" assertions="3" failures="0" errors="0" time="0.014447">
        <testcase name="testEncodePathInvalid with data set #0" assertions="1" time="0.004742"/>
        <testcase name="testEncodePathInvalid with data set #1" assertions="1" time="0.004854"/>
        <testcase name="testEncodePathInvalid with data set #2" assertions="1" time="0.004851"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidQueryFragment" tests="5" assertions="5" failures="0" errors="0" time="0.020623">
        <testcase name="testValidQueryFragment with data set #0" assertions="1" time="0.004236"/>
        <testcase name="testValidQueryFragment with data set #1" assertions="1" time="0.004088"/>
        <testcase name="testValidQueryFragment with data set #2" assertions="1" time="0.004078"/>
        <testcase name="testValidQueryFragment with data set #3" assertions="1" time="0.004126"/>
        <testcase name="testValidQueryFragment with data set #4" assertions="1" time="0.004095"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testInvalidQueryFragment" tests="5" assertions="5" failures="0" errors="0" time="0.020446">
        <testcase name="testInvalidQueryFragment with data set #0" assertions="1" time="0.004105"/>
        <testcase name="testInvalidQueryFragment with data set #1" assertions="1" time="0.004073"/>
        <testcase name="testInvalidQueryFragment with data set #2" assertions="1" time="0.004164"/>
        <testcase name="testInvalidQueryFragment with data set #3" assertions="1" time="0.004040"/>
        <testcase name="testInvalidQueryFragment with data set #4" assertions="1" time="0.004064"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testEncodeInvalidQueryFragment" tests="5" assertions="5" failures="0" errors="0" time="0.024605">
        <testcase name="testEncodeInvalidQueryFragment with data set #0" assertions="1" time="0.004775"/>
        <testcase name="testEncodeInvalidQueryFragment with data set #1" assertions="1" time="0.004922"/>
        <testcase name="testEncodeInvalidQueryFragment with data set #2" assertions="1" time="0.005054"/>
        <testcase name="testEncodeInvalidQueryFragment with data set #3" assertions="1" time="0.005009"/>
        <testcase name="testEncodeInvalidQueryFragment with data set #4" assertions="1" time="0.004845"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testEncodeValidQueryFragment" tests="5" assertions="5" failures="0" errors="0" time="0.023941">
        <testcase name="testEncodeValidQueryFragment with data set #0" assertions="1" time="0.004708"/>
        <testcase name="testEncodeValidQueryFragment with data set #1" assertions="1" time="0.004713"/>
        <testcase name="testEncodeValidQueryFragment with data set #2" assertions="1" time="0.004899"/>
        <testcase name="testEncodeValidQueryFragment with data set #3" assertions="1" time="0.004752"/>
        <testcase name="testEncodeValidQueryFragment with data set #4" assertions="1" time="0.004869"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidateUserInfoValid" tests="8" assertions="8" failures="0" errors="0" time="0.033022">
        <testcase name="testValidateUserInfoValid with data set #0" assertions="1" time="0.004195"/>
        <testcase name="testValidateUserInfoValid with data set #1" assertions="1" time="0.004125"/>
        <testcase name="testValidateUserInfoValid with data set #2" assertions="1" time="0.004121"/>
        <testcase name="testValidateUserInfoValid with data set #3" assertions="1" time="0.004051"/>
        <testcase name="testValidateUserInfoValid with data set #4" assertions="1" time="0.004143"/>
        <testcase name="testValidateUserInfoValid with data set #5" assertions="1" time="0.004075"/>
        <testcase name="testValidateUserInfoValid with data set #6" assertions="1" time="0.004121"/>
        <testcase name="testValidateUserInfoValid with data set #7" assertions="1" time="0.004190"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidateUserInfoInvalid" tests="3" assertions="3" failures="0" errors="0" time="0.013818">
        <testcase name="testValidateUserInfoInvalid with data set #0" assertions="1" time="0.004103"/>
        <testcase name="testValidateUserInfoInvalid with data set #1" assertions="1" time="0.004200"/>
        <testcase name="testValidateUserInfoInvalid with data set #2" assertions="1" time="0.005515"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testEncodeUserInfoValid" tests="8" assertions="8" failures="0" errors="0" time="0.046377">
        <testcase name="testEncodeUserInfoValid with data set #0" assertions="1" time="0.005154"/>
        <testcase name="testEncodeUserInfoValid with data set #1" assertions="1" time="0.004959"/>
        <testcase name="testEncodeUserInfoValid with data set #2" assertions="1" time="0.005688"/>
        <testcase name="testEncodeUserInfoValid with data set #3" assertions="1" time="0.005932"/>
        <testcase name="testEncodeUserInfoValid with data set #4" assertions="1" time="0.006053"/>
        <testcase name="testEncodeUserInfoValid with data set #5" assertions="1" time="0.006204"/>
        <testcase name="testEncodeUserInfoValid with data set #6" assertions="1" time="0.006184"/>
        <testcase name="testEncodeUserInfoValid with data set #7" assertions="1" time="0.006203"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testEncodeUserInfoInvalid" tests="3" assertions="3" failures="0" errors="0" time="0.019142">
        <testcase name="testEncodeUserInfoInvalid with data set #0" assertions="1" time="0.006541"/>
        <testcase name="testEncodeUserInfoInvalid with data set #1" assertions="1" time="0.006276"/>
        <testcase name="testEncodeUserInfoInvalid with data set #2" assertions="1" time="0.006325"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidatePortValid" tests="5" assertions="5" failures="0" errors="0" time="0.023667">
        <testcase name="testValidatePortValid with data set #0" assertions="1" time="0.005150"/>
        <testcase name="testValidatePortValid with data set #1" assertions="1" time="0.004450"/>
        <testcase name="testValidatePortValid with data set #2" assertions="1" time="0.005425"/>
        <testcase name="testValidatePortValid with data set #3" assertions="1" time="0.004402"/>
        <testcase name="testValidatePortValid with data set #4" assertions="1" time="0.004240"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidatePortInvalid" tests="8" assertions="8" failures="0" errors="0" time="0.035013">
        <testcase name="testValidatePortInvalid with data set #0" assertions="1" time="0.004463"/>
        <testcase name="testValidatePortInvalid with data set #1" assertions="1" time="0.004242"/>
        <testcase name="testValidatePortInvalid with data set #2" assertions="1" time="0.004206"/>
        <testcase name="testValidatePortInvalid with data set #3" assertions="1" time="0.004174"/>
        <testcase name="testValidatePortInvalid with data set #4" assertions="1" time="0.004339"/>
        <testcase name="testValidatePortInvalid with data set #5" assertions="1" time="0.004132"/>
        <testcase name="testValidatePortInvalid with data set #6" assertions="1" time="0.004110"/>
        <testcase name="testValidatePortInvalid with data set #7" assertions="1" time="0.005347"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testRelativeUriResolvingRfcSamples" tests="39" assertions="39" failures="0" errors="0" time="0.316538">
        <testcase name="testRelativeUriResolvingRfcSamples with data set #0" assertions="1" time="0.006851"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #1" assertions="1" time="0.010247"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #2" assertions="1" time="0.008418"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #3" assertions="1" time="0.008080"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #4" assertions="1" time="0.008028"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #5" assertions="1" time="0.007463"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #6" assertions="1" time="0.007955"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #7" assertions="1" time="0.008091"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #8" assertions="1" time="0.008146"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #9" assertions="1" time="0.008121"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #10" assertions="1" time="0.008203"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #11" assertions="1" time="0.008255"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #12" assertions="1" time="0.008043"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #13" assertions="1" time="0.007963"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #14" assertions="1" time="0.008281"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #15" assertions="1" time="0.008486"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #16" assertions="1" time="0.008593"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #17" assertions="1" time="0.008519"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #18" assertions="1" time="0.008202"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #19" assertions="1" time="0.008419"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #20" assertions="1" time="0.008197"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #21" assertions="1" time="0.008156"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #22" assertions="1" time="0.008063"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #23" assertions="1" time="0.008241"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #24" assertions="1" time="0.008226"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #25" assertions="1" time="0.008225"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #26" assertions="1" time="0.008038"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #27" assertions="1" time="0.008042"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #28" assertions="1" time="0.008144"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #29" assertions="1" time="0.008222"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #30" assertions="1" time="0.008164"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #31" assertions="1" time="0.008219"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #32" assertions="1" time="0.008263"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #33" assertions="1" time="0.008204"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #34" assertions="1" time="0.008060"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #35" assertions="1" time="0.008073"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #36" assertions="1" time="0.008185"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #37" assertions="1" time="0.008159"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #38" assertions="1" time="0.005294"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testRemovePathDotSegments" tests="2" assertions="2" failures="0" errors="0" time="0.009732">
        <testcase name="testRemovePathDotSegments with data set #0" assertions="1" time="0.004858"/>
        <testcase name="testRemovePathDotSegments with data set #1" assertions="1" time="0.004874"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testNormalizeUrl" tests="19" assertions="19" failures="0" errors="0" time="0.115153">
        <testcase name="testNormalizeUrl with data set #0" assertions="1" time="0.006480"/>
        <testcase name="testNormalizeUrl with data set #1" assertions="1" time="0.006980"/>
        <testcase name="testNormalizeUrl with data set #2" assertions="1" time="0.007299"/>
        <testcase name="testNormalizeUrl with data set #3" assertions="1" time="0.005925"/>
        <testcase name="testNormalizeUrl with data set #4" assertions="1" time="0.006124"/>
        <testcase name="testNormalizeUrl with data set #5" assertions="1" time="0.005976"/>
        <testcase name="testNormalizeUrl with data set #6" assertions="1" time="0.006695"/>
        <testcase name="testNormalizeUrl with data set #7" assertions="1" time="0.005968"/>
        <testcase name="testNormalizeUrl with data set #8" assertions="1" time="0.005610"/>
        <testcase name="testNormalizeUrl with data set #9" assertions="1" time="0.005582"/>
        <testcase name="testNormalizeUrl with data set #10" assertions="1" time="0.005635"/>
        <testcase name="testNormalizeUrl with data set #11" assertions="1" time="0.005614"/>
        <testcase name="testNormalizeUrl with data set #12" assertions="1" time="0.005453"/>
        <testcase name="testNormalizeUrl with data set #13" assertions="1" time="0.005409"/>
        <testcase name="testNormalizeUrl with data set #14" assertions="1" time="0.005443"/>
        <testcase name="testNormalizeUrl with data set #15" assertions="1" time="0.005467"/>
        <testcase name="testNormalizeUrl with data set #16" assertions="1" time="0.005296"/>
        <testcase name="testNormalizeUrl with data set #17" assertions="1" time="0.006983"/>
        <testcase name="testNormalizeUrl with data set #18" assertions="1" time="0.007214"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testMergeToNewUri" tests="39" assertions="39" failures="0" errors="0" time="0.317647">
        <testcase name="testMergeToNewUri with data set #0" assertions="1" time="0.005439"/>
        <testcase name="testMergeToNewUri with data set #1" assertions="1" time="0.008367"/>
        <testcase name="testMergeToNewUri with data set #2" assertions="1" time="0.008237"/>
        <testcase name="testMergeToNewUri with data set #3" assertions="1" time="0.008315"/>
        <testcase name="testMergeToNewUri with data set #4" assertions="1" time="0.008369"/>
        <testcase name="testMergeToNewUri with data set #5" assertions="1" time="0.007850"/>
        <testcase name="testMergeToNewUri with data set #6" assertions="1" time="0.008310"/>
        <testcase name="testMergeToNewUri with data set #7" assertions="1" time="0.008390"/>
        <testcase name="testMergeToNewUri with data set #8" assertions="1" time="0.008402"/>
        <testcase name="testMergeToNewUri with data set #9" assertions="1" time="0.008383"/>
        <testcase name="testMergeToNewUri with data set #10" assertions="1" time="0.008409"/>
        <testcase name="testMergeToNewUri with data set #11" assertions="1" time="0.008676"/>
        <testcase name="testMergeToNewUri with data set #12" assertions="1" time="0.008874"/>
        <testcase name="testMergeToNewUri with data set #13" assertions="1" time="0.008348"/>
        <testcase name="testMergeToNewUri with data set #14" assertions="1" time="0.008607"/>
        <testcase name="testMergeToNewUri with data set #15" assertions="1" time="0.008274"/>
        <testcase name="testMergeToNewUri with data set #16" assertions="1" time="0.008166"/>
        <testcase name="testMergeToNewUri with data set #17" assertions="1" time="0.008169"/>
        <testcase name="testMergeToNewUri with data set #18" assertions="1" time="0.008167"/>
        <testcase name="testMergeToNewUri with data set #19" assertions="1" time="0.008154"/>
        <testcase name="testMergeToNewUri with data set #20" assertions="1" time="0.008207"/>
        <testcase name="testMergeToNewUri with data set #21" assertions="1" time="0.008189"/>
        <testcase name="testMergeToNewUri with data set #22" assertions="1" time="0.008288"/>
        <testcase name="testMergeToNewUri with data set #23" assertions="1" time="0.008184"/>
        <testcase name="testMergeToNewUri with data set #24" assertions="1" time="0.008106"/>
        <testcase name="testMergeToNewUri with data set #25" assertions="1" time="0.008244"/>
        <testcase name="testMergeToNewUri with data set #26" assertions="1" time="0.008101"/>
        <testcase name="testMergeToNewUri with data set #27" assertions="1" time="0.008084"/>
        <testcase name="testMergeToNewUri with data set #28" assertions="1" time="0.008265"/>
        <testcase name="testMergeToNewUri with data set #29" assertions="1" time="0.008506"/>
        <testcase name="testMergeToNewUri with data set #30" assertions="1" time="0.008252"/>
        <testcase name="testMergeToNewUri with data set #31" assertions="1" time="0.008159"/>
        <testcase name="testMergeToNewUri with data set #32" assertions="1" time="0.008093"/>
        <testcase name="testMergeToNewUri with data set #33" assertions="1" time="0.008381"/>
        <testcase name="testMergeToNewUri with data set #34" assertions="1" time="0.008384"/>
        <testcase name="testMergeToNewUri with data set #35" assertions="1" time="0.008235"/>
        <testcase name="testMergeToNewUri with data set #36" assertions="1" time="0.008173"/>
        <testcase name="testMergeToNewUri with data set #37" assertions="1" time="0.008375"/>
        <testcase name="testMergeToNewUri with data set #38" assertions="1" time="0.005515"/>
      </testsuite>
      <testcase name="testMergeTwoObjectsNotModifying" class="Eloquent\Schemer\Uri\UriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/UriTest.php" line="707" assertions="4" time="0.009925"/>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testMakeRelative" tests="6" assertions="6" failures="0" errors="0" time="0.054847">
        <testcase name="testMakeRelative with data set #0" assertions="1" time="0.009341"/>
        <testcase name="testMakeRelative with data set #1" assertions="1" time="0.009193"/>
        <testcase name="testMakeRelative with data set #2" assertions="1" time="0.009312"/>
        <testcase name="testMakeRelative with data set #3" assertions="1" time="0.009322"/>
        <testcase name="testMakeRelative with data set #4" assertions="1" time="0.008921"/>
        <testcase name="testMakeRelative with data set #5" assertions="1" time="0.008758"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testConstructorCopyExistingObject" tests="30" assertions="30" failures="0" errors="0" time="0.414893">
        <testcase name="testConstructorCopyExistingObject with data set #0" assertions="1" time="0.014389"/>
        <testcase name="testConstructorCopyExistingObject with data set #1" assertions="1" time="0.015000"/>
        <testcase name="testConstructorCopyExistingObject with data set #2" assertions="1" time="0.015181"/>
        <testcase name="testConstructorCopyExistingObject with data set #3" assertions="1" time="0.012582"/>
        <testcase name="testConstructorCopyExistingObject with data set #4" assertions="1" time="0.012754"/>
        <testcase name="testConstructorCopyExistingObject with data set #5" assertions="1" time="0.012854"/>
        <testcase name="testConstructorCopyExistingObject with data set #6" assertions="1" time="0.013224"/>
        <testcase name="testConstructorCopyExistingObject with data set #7" assertions="1" time="0.012931"/>
        <testcase name="testConstructorCopyExistingObject with data set #8" assertions="1" time="0.012656"/>
        <testcase name="testConstructorCopyExistingObject with data set #9" assertions="1" time="0.014938"/>
        <testcase name="testConstructorCopyExistingObject with data set #10" assertions="1" time="0.015415"/>
        <testcase name="testConstructorCopyExistingObject with data set #11" assertions="1" time="0.015095"/>
        <testcase name="testConstructorCopyExistingObject with data set #12" assertions="1" time="0.015483"/>
        <testcase name="testConstructorCopyExistingObject with data set #13" assertions="1" time="0.015395"/>
        <testcase name="testConstructorCopyExistingObject with data set #14" assertions="1" time="0.015307"/>
        <testcase name="testConstructorCopyExistingObject with data set #15" assertions="1" time="0.015248"/>
        <testcase name="testConstructorCopyExistingObject with data set #16" assertions="1" time="0.012610"/>
        <testcase name="testConstructorCopyExistingObject with data set #17" assertions="1" time="0.013195"/>
        <testcase name="testConstructorCopyExistingObject with data set #18" assertions="1" time="0.012643"/>
        <testcase name="testConstructorCopyExistingObject with data set #19" assertions="1" time="0.014560"/>
        <testcase name="testConstructorCopyExistingObject with data set #20" assertions="1" time="0.015651"/>
        <testcase name="testConstructorCopyExistingObject with data set #21" assertions="1" time="0.012897"/>
        <testcase name="testConstructorCopyExistingObject with data set #22" assertions="1" time="0.013753"/>
        <testcase name="testConstructorCopyExistingObject with data set #23" assertions="1" time="0.012714"/>
        <testcase name="testConstructorCopyExistingObject with data set #24" assertions="1" time="0.012797"/>
        <testcase name="testConstructorCopyExistingObject with data set #25" assertions="1" time="0.014880"/>
        <testcase name="testConstructorCopyExistingObject with data set #26" assertions="1" time="0.012619"/>
        <testcase name="testConstructorCopyExistingObject with data set #27" assertions="1" time="0.012788"/>
        <testcase name="testConstructorCopyExistingObject with data set #28" assertions="1" time="0.012761"/>
        <testcase name="testConstructorCopyExistingObject with data set #29" assertions="1" time="0.012573"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testConstructorInvalidInput" tests="5" assertions="5" failures="0" errors="0" time="0.023222">
        <testcase name="testConstructorInvalidInput with data set #0" assertions="1" time="0.004602"/>
        <testcase name="testConstructorInvalidInput with data set #1" assertions="1" time="0.004613"/>
        <testcase name="testConstructorInvalidInput with data set #2" assertions="1" time="0.004659"/>
        <testcase name="testConstructorInvalidInput with data set #3" assertions="1" time="0.004639"/>
        <testcase name="testConstructorInvalidInput with data set #4" assertions="1" time="0.004709"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testFluentInterface" tests="10" assertions="10" failures="0" errors="0" time="0.059121">
        <testcase name="testFluentInterface with data set #0" assertions="1" time="0.004201"/>
        <testcase name="testFluentInterface with data set #1" assertions="1" time="0.004288"/>
        <testcase name="testFluentInterface with data set #2" assertions="1" time="0.005138"/>
        <testcase name="testFluentInterface with data set #3" assertions="1" time="0.005020"/>
        <testcase name="testFluentInterface with data set #4" assertions="1" time="0.007828"/>
        <testcase name="testFluentInterface with data set #5" assertions="1" time="0.005227"/>
        <testcase name="testFluentInterface with data set #6" assertions="1" time="0.005226"/>
        <testcase name="testFluentInterface with data set #7" assertions="1" time="0.008886"/>
        <testcase name="testFluentInterface with data set #8" assertions="1" time="0.008878"/>
        <testcase name="testFluentInterface with data set #9" assertions="1" time="0.004429"/>
      </testsuite>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Validation\ConstraintValidatorTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Validation/ConstraintValidatorTest.php" namespace="Eloquent\Schemer\Validation" fullPackage="Eloquent.Schemer.Validation" tests="166" assertions="166" failures="0" errors="0" time="70.558410">
      <testsuite name="Eloquent\Schemer\Validation\ConstraintValidatorTest::testValidateSchema" tests="166" assertions="166" failures="0" errors="0" time="70.558410">
        <testcase name="testValidateSchema with data set &quot;maxDateTime / maxDateTime.toml / valid date/time&quot;" assertions="1" time="0.192369"/>
        <testcase name="testValidateSchema with data set &quot;maxDateTime / maxDateTime.toml / valid non-date/time&quot;" assertions="1" time="0.101401"/>
        <testcase name="testValidateSchema with data set &quot;maxDateTime / maxDateTime.toml / invalid&quot;" assertions="1" time="0.119547"/>
        <testcase name="testValidateSchema with data set &quot;required / required.json / valid object&quot;" assertions="1" time="0.176579"/>
        <testcase name="testValidateSchema with data set &quot;required / required.json / valid non-object&quot;" assertions="1" time="0.088816"/>
        <testcase name="testValidateSchema with data set &quot;required / required.json / invalid&quot;" assertions="1" time="0.086005"/>
        <testcase name="testValidateSchema with data set &quot;allOf / multiple-schemas.json / valid&quot;" assertions="1" time="0.225273"/>
        <testcase name="testValidateSchema with data set &quot;allOf / multiple-schemas.json / one invalid&quot;" assertions="1" time="0.197134"/>
        <testcase name="testValidateSchema with data set &quot;allOf / multiple-schemas.json / all invalid&quot;" assertions="1" time="0.173795"/>
        <testcase name="testValidateSchema with data set &quot;allOf / single-schema.json / valid&quot;" assertions="1" time="0.099765"/>
        <testcase name="testValidateSchema with data set &quot;allOf / single-schema.json / invalid&quot;" assertions="1" time="0.086591"/>
        <testcase name="testValidateSchema with data set &quot;minimum / minimum-floating-point-value.json / valid floating-point values&quot;" assertions="1" time="0.128685"/>
        <testcase name="testValidateSchema with data set &quot;minimum / minimum-floating-point-value.json / valid integers&quot;" assertions="1" time="0.111926"/>
        <testcase name="testValidateSchema with data set &quot;minimum / minimum-floating-point-value.json / valid non-number&quot;" assertions="1" time="0.104815"/>
        <testcase name="testValidateSchema with data set &quot;minimum / minimum-floating-point-value.json / invalid&quot;" assertions="1" time="0.108932"/>
        <testcase name="testValidateSchema with data set &quot;minimum / minimum-integer.json / valid integers&quot;" assertions="1" time="0.124717"/>
        <testcase name="testValidateSchema with data set &quot;minimum / minimum-integer.json / valid floating-point values&quot;" assertions="1" time="0.108581"/>
        <testcase name="testValidateSchema with data set &quot;minimum / minimum-integer.json / valid non-number&quot;" assertions="1" time="0.104296"/>
        <testcase name="testValidateSchema with data set &quot;minimum / minimum-integer.json / invalid&quot;" assertions="1" time="0.109815"/>
        <testcase name="testValidateSchema with data set &quot;maximum / maximum-integer.json / valid integers&quot;" assertions="1" time="0.215676"/>
        <testcase name="testValidateSchema with data set &quot;maximum / maximum-integer.json / valid floating-point values&quot;" assertions="1" time="0.124100"/>
        <testcase name="testValidateSchema with data set &quot;maximum / maximum-integer.json / valid non-number&quot;" assertions="1" time="0.101739"/>
        <testcase name="testValidateSchema with data set &quot;maximum / maximum-integer.json / invalid&quot;" assertions="1" time="0.108427"/>
        <testcase name="testValidateSchema with data set &quot;maximum / maximum-floating-point-value.json / valid floating-point values&quot;" assertions="1" time="0.118848"/>
        <testcase name="testValidateSchema with data set &quot;maximum / maximum-floating-point-value.json / valid integers&quot;" assertions="1" time="0.109312"/>
        <testcase name="testValidateSchema with data set &quot;maximum / maximum-floating-point-value.json / valid non-number&quot;" assertions="1" time="0.102247"/>
        <testcase name="testValidateSchema with data set &quot;maximum / maximum-floating-point-value.json / invalid&quot;" assertions="1" time="0.109624"/>
        <testcase name="testValidateSchema with data set &quot;multipleOf / multipleOf-floating-point-value.json / valid floating point values&quot;" assertions="1" time="0.306596"/>
        <testcase name="testValidateSchema with data set &quot;multipleOf / multipleOf-floating-point-value.json / valid integers&quot;" assertions="1" time="0.147221"/>
        <testcase name="testValidateSchema with data set &quot;multipleOf / multipleOf-floating-point-value.json / valid non-number&quot;" assertions="1" time="0.124716"/>
        <testcase name="testValidateSchema with data set &quot;multipleOf / multipleOf-floating-point-value.json / invalid&quot;" assertions="1" time="0.115872"/>
        <testcase name="testValidateSchema with data set &quot;multipleOf / multipleOf-integer.json / valid integers&quot;" assertions="1" time="0.172320"/>
        <testcase name="testValidateSchema with data set &quot;multipleOf / multipleOf-integer.json / valid floating point values&quot;" assertions="1" time="0.126048"/>
        <testcase name="testValidateSchema with data set &quot;multipleOf / multipleOf-integer.json / valid non-number&quot;" assertions="1" time="0.107217"/>
        <testcase name="testValidateSchema with data set &quot;multipleOf / multipleOf-integer.json / invalid&quot;" assertions="1" time="0.111730"/>
        <testcase name="testValidateSchema with data set &quot;uniqueItems / uniqueItems-false.json / valid unique&quot;" assertions="1" time="0.082037"/>
        <testcase name="testValidateSchema with data set &quot;uniqueItems / uniqueItems-false.json / valid non-unique&quot;" assertions="1" time="0.072881"/>
        <testcase name="testValidateSchema with data set &quot;uniqueItems / uniqueItems-false.json / valid non-array&quot;" assertions="1" time="0.079345"/>
        <testcase name="testValidateSchema with data set &quot;uniqueItems / uniqueItems-true.json / valid array&quot;" assertions="1" time="0.082126"/>
        <testcase name="testValidateSchema with data set &quot;uniqueItems / uniqueItems-true.json / valid non-array&quot;" assertions="1" time="0.076565"/>
        <testcase name="testValidateSchema with data set &quot;uniqueItems / uniqueItems-true.json / invalid&quot;" assertions="1" time="0.076544"/>
        <testcase name="testValidateSchema with data set &quot;schema / json-schema-meta-schema.json / valid - empty schema&quot;" assertions="1" time="4.958050"/>
        <testcase name="testValidateSchema with data set &quot;schema / json-schema-meta-schema.json / valid - JSON schema meta schema&quot;" assertions="1" time="6.054205"/>
        <testcase name="testValidateSchema with data set &quot;schema / json-schema-meta-schema.json / invalid - Schemer meta schema&quot;" assertions="1" time="6.048222"/>
        <testcase name="testValidateSchema with data set &quot;schema / json-schema-meta-schema.json / invalid - not object&quot;" assertions="1" time="4.829028"/>
        <testcase name="testValidateSchema with data set &quot;schema / json-schema-meta-schema.json / invalid - unknown type&quot;" assertions="1" time="4.839689"/>
        <testcase name="testValidateSchema with data set &quot;schema / meta-schema.json / valid - empty schema&quot;" assertions="1" time="4.873671"/>
        <testcase name="testValidateSchema with data set &quot;schema / meta-schema.json / valid - Schemer meta schema&quot;" assertions="1" time="6.619919"/>
        <testcase name="testValidateSchema with data set &quot;schema / meta-schema.json / valid - JSON schema meta schema&quot;" assertions="1" time="6.186159"/>
        <testcase name="testValidateSchema with data set &quot;schema / meta-schema.json / invalid - not object&quot;" assertions="1" time="4.988458"/>
        <testcase name="testValidateSchema with data set &quot;schema / meta-schema.json / invalid - unknown type&quot;" assertions="1" time="4.856663"/>
        <testcase name="testValidateSchema with data set &quot;oneOf / multiple-schemas.json / valid&quot;" assertions="1" time="0.201913"/>
        <testcase name="testValidateSchema with data set &quot;oneOf / multiple-schemas.json / invalid - none matching&quot;" assertions="1" time="0.174041"/>
        <testcase name="testValidateSchema with data set &quot;oneOf / multiple-schemas.json / invalid - more than one matching&quot;" assertions="1" time="0.173643"/>
        <testcase name="testValidateSchema with data set &quot;oneOf / single-schema.json / valid&quot;" assertions="1" time="0.087478"/>
        <testcase name="testValidateSchema with data set &quot;oneOf / single-schema.json / invalid&quot;" assertions="1" time="0.087340"/>
        <testcase name="testValidateSchema with data set &quot;maxProperties / maxProperties.json / valid object&quot;" assertions="1" time="0.077472"/>
        <testcase name="testValidateSchema with data set &quot;maxProperties / maxProperties.json / valid non-object&quot;" assertions="1" time="0.073166"/>
        <testcase name="testValidateSchema with data set &quot;maxProperties / maxProperties.json / invalid&quot;" assertions="1" time="0.073428"/>
        <testcase name="testValidateSchema with data set &quot;maxItems / maxItems.json / valid array&quot;" assertions="1" time="0.074621"/>
        <testcase name="testValidateSchema with data set &quot;maxItems / maxItems.json / valid non-array&quot;" assertions="1" time="0.072626"/>
        <testcase name="testValidateSchema with data set &quot;maxItems / maxItems.json / invalid&quot;" assertions="1" time="0.072886"/>
        <testcase name="testValidateSchema with data set &quot;format / uri.json / valid URI&quot;" assertions="1" time="0.067649"/>
        <testcase name="testValidateSchema with data set &quot;format / uri.json / valid non-string&quot;" assertions="1" time="0.064322"/>
        <testcase name="testValidateSchema with data set &quot;format / uri.json / invalid&quot;" assertions="1" time="0.065330"/>
        <testcase name="testValidateSchema with data set &quot;format / hostname.json / valid hostname&quot;" assertions="1" time="0.074747"/>
        <testcase name="testValidateSchema with data set &quot;format / hostname.json / valid non-string&quot;" assertions="1" time="0.070894"/>
        <testcase name="testValidateSchema with data set &quot;format / hostname.json / invalid string&quot;" assertions="1" time="0.072240"/>
        <testcase name="testValidateSchema with data set &quot;format / hostname.json / invalid IP address&quot;" assertions="1" time="0.071317"/>
        <testcase name="testValidateSchema with data set &quot;format / ipv6.json / valid IP address&quot;" assertions="1" time="0.071220"/>
        <testcase name="testValidateSchema with data set &quot;format / ipv6.json / valid non-string&quot;" assertions="1" time="0.070277"/>
        <testcase name="testValidateSchema with data set &quot;format / ipv6.json / invalid string&quot;" assertions="1" time="0.071276"/>
        <testcase name="testValidateSchema with data set &quot;format / ipv6.json / invalid IPv4 address&quot;" assertions="1" time="0.071089"/>
        <testcase name="testValidateSchema with data set &quot;format / date-time.json / valid date/time (zulu)&quot;" assertions="1" time="0.075582"/>
        <testcase name="testValidateSchema with data set &quot;format / date-time.json / valid date/time (offset with colon)&quot;" assertions="1" time="0.073794"/>
        <testcase name="testValidateSchema with data set &quot;format / date-time.json / valid date/time (offset without colon)&quot;" assertions="1" time="0.074186"/>
        <testcase name="testValidateSchema with data set &quot;format / date-time.json / valid non-string&quot;" assertions="1" time="0.074038"/>
        <testcase name="testValidateSchema with data set &quot;format / date-time.json / invalid&quot;" assertions="1" time="0.074222"/>
        <testcase name="testValidateSchema with data set &quot;format / ipv4.json / valid IP address&quot;" assertions="1" time="0.073800"/>
        <testcase name="testValidateSchema with data set &quot;format / ipv4.json / valid non-string&quot;" assertions="1" time="0.070339"/>
        <testcase name="testValidateSchema with data set &quot;format / ipv4.json / invalid string&quot;" assertions="1" time="0.071355"/>
        <testcase name="testValidateSchema with data set &quot;format / ipv4.json / invalid IPv6 address&quot;" assertions="1" time="0.071210"/>
        <testcase name="testValidateSchema with data set &quot;format / email.json / valid email&quot;" assertions="1" time="0.103143"/>
        <testcase name="testValidateSchema with data set &quot;format / email.json / valid non-string&quot;" assertions="1" time="0.079403"/>
        <testcase name="testValidateSchema with data set &quot;format / email.json / invalid&quot;" assertions="1" time="0.065334"/>
        <testcase name="testValidateSchema with data set &quot;minLength / minLength.json / valid string&quot;" assertions="1" time="0.071467"/>
        <testcase name="testValidateSchema with data set &quot;minLength / minLength.json / valid non-string&quot;" assertions="1" time="0.065006"/>
        <testcase name="testValidateSchema with data set &quot;minLength / minLength.json / invalid&quot;" assertions="1" time="0.065514"/>
        <testcase name="testValidateSchema with data set &quot;maxLength / maxLength.json / valid string&quot;" assertions="1" time="0.066738"/>
        <testcase name="testValidateSchema with data set &quot;maxLength / maxLength.json / valid non-string&quot;" assertions="1" time="0.065483"/>
        <testcase name="testValidateSchema with data set &quot;maxLength / maxLength.json / invalid&quot;" assertions="1" time="0.065718"/>
        <testcase name="testValidateSchema with data set &quot;pattern / pattern.json / valid string a&quot;" assertions="1" time="0.071845"/>
        <testcase name="testValidateSchema with data set &quot;pattern / pattern.json / valid string b&quot;" assertions="1" time="0.071138"/>
        <testcase name="testValidateSchema with data set &quot;pattern / pattern.json / valid non-string&quot;" assertions="1" time="0.071133"/>
        <testcase name="testValidateSchema with data set &quot;pattern / pattern.json / invalid&quot;" assertions="1" time="0.071537"/>
        <testcase name="testValidateSchema with data set &quot;properties / additionalProperties-schema.json / valid&quot;" assertions="1" time="0.129696"/>
        <testcase name="testValidateSchema with data set &quot;properties / additionalProperties-schema.json / invalid&quot;" assertions="1" time="0.132226"/>
        <testcase name="testValidateSchema with data set &quot;properties / multiple-properties.json / valid&quot;" assertions="1" time="0.147888"/>
        <testcase name="testValidateSchema with data set &quot;properties / multiple-properties.json / invalid&quot;" assertions="1" time="0.153280"/>
        <testcase name="testValidateSchema with data set &quot;properties / multiple-patternProperties.json / valid&quot;" assertions="1" time="0.160326"/>
        <testcase name="testValidateSchema with data set &quot;properties / multiple-patternProperties.json / invalid&quot;" assertions="1" time="0.166442"/>
        <testcase name="testValidateSchema with data set &quot;properties / additionalProperties-true.json / valid&quot;" assertions="1" time="0.094400"/>
        <testcase name="testValidateSchema with data set &quot;properties / property-schema-cascade.json / valid object&quot;" assertions="1" time="0.286367"/>
        <testcase name="testValidateSchema with data set &quot;properties / property-schema-cascade.json / valid non-object&quot;" assertions="1" time="0.255509"/>
        <testcase name="testValidateSchema with data set &quot;properties / property-schema-cascade.json / invalid&quot;" assertions="1" time="0.283592"/>
        <testcase name="testValidateSchema with data set &quot;properties / additionalProperties-false.json / valid&quot;" assertions="1" time="0.119734"/>
        <testcase name="testValidateSchema with data set &quot;properties / additionalProperties-false.json / invalid&quot;" assertions="1" time="0.117723"/>
        <testcase name="testValidateSchema with data set &quot;anyOf / multiple-schemas.json / valid string&quot;" assertions="1" time="0.120143"/>
        <testcase name="testValidateSchema with data set &quot;anyOf / multiple-schemas.json / valid object&quot;" assertions="1" time="0.120451"/>
        <testcase name="testValidateSchema with data set &quot;anyOf / multiple-schemas.json / invalid&quot;" assertions="1" time="0.121488"/>
        <testcase name="testValidateSchema with data set &quot;anyOf / single-schema.json / valid&quot;" assertions="1" time="0.088491"/>
        <testcase name="testValidateSchema with data set &quot;anyOf / single-schema.json / invalid&quot;" assertions="1" time="0.088188"/>
        <testcase name="testValidateSchema with data set &quot;enum / single-value.json / valid&quot;" assertions="1" time="0.064143"/>
        <testcase name="testValidateSchema with data set &quot;enum / single-value.json / invalid&quot;" assertions="1" time="0.064127"/>
        <testcase name="testValidateSchema with data set &quot;enum / multiple-values.json / valid - first element&quot;" assertions="1" time="0.071755"/>
        <testcase name="testValidateSchema with data set &quot;enum / multiple-values.json / valid - middle element&quot;" assertions="1" time="0.073964"/>
        <testcase name="testValidateSchema with data set &quot;enum / multiple-values.json / invalid&quot;" assertions="1" time="0.073935"/>
        <testcase name="testValidateSchema with data set &quot;type / boolean-type.json / valid&quot;" assertions="1" time="0.065024"/>
        <testcase name="testValidateSchema with data set &quot;type / boolean-type.json / invalid&quot;" assertions="1" time="0.101427"/>
        <testcase name="testValidateSchema with data set &quot;type / array-type.json / valid&quot;" assertions="1" time="0.065289"/>
        <testcase name="testValidateSchema with data set &quot;type / array-type.json / invalid&quot;" assertions="1" time="0.065139"/>
        <testcase name="testValidateSchema with data set &quot;type / string-type.json / valid&quot;" assertions="1" time="0.067735"/>
        <testcase name="testValidateSchema with data set &quot;type / string-type.json / invalid&quot;" assertions="1" time="0.066419"/>
        <testcase name="testValidateSchema with data set &quot;type / number-type.json / valid floating point value&quot;" assertions="1" time="0.071005"/>
        <testcase name="testValidateSchema with data set &quot;type / number-type.json / valid integer&quot;" assertions="1" time="0.070308"/>
        <testcase name="testValidateSchema with data set &quot;type / number-type.json / invalid&quot;" assertions="1" time="0.073732"/>
        <testcase name="testValidateSchema with data set &quot;type / object-type.json / valid&quot;" assertions="1" time="0.080560"/>
        <testcase name="testValidateSchema with data set &quot;type / object-type.json / invalid&quot;" assertions="1" time="0.091418"/>
        <testcase name="testValidateSchema with data set &quot;type / datetime-type.toml / valid&quot;" assertions="1" time="0.085153"/>
        <testcase name="testValidateSchema with data set &quot;type / datetime-type.toml / invalid&quot;" assertions="1" time="0.084527"/>
        <testcase name="testValidateSchema with data set &quot;type / integer-type.json / valid&quot;" assertions="1" time="0.096282"/>
        <testcase name="testValidateSchema with data set &quot;type / integer-type.json / invalid&quot;" assertions="1" time="0.065096"/>
        <testcase name="testValidateSchema with data set &quot;type / multiple-types.json / valid string&quot;" assertions="1" time="0.088219"/>
        <testcase name="testValidateSchema with data set &quot;type / multiple-types.json / valid object&quot;" assertions="1" time="0.088673"/>
        <testcase name="testValidateSchema with data set &quot;type / multiple-types.json / invalid&quot;" assertions="1" time="0.088827"/>
        <testcase name="testValidateSchema with data set &quot;type / null-type.json / valid&quot;" assertions="1" time="0.064335"/>
        <testcase name="testValidateSchema with data set &quot;type / null-type.json / invalid&quot;" assertions="1" time="0.064496"/>
        <testcase name="testValidateSchema with data set &quot;dependencies / property-dependency.json / valid - dependant&quot;" assertions="1" time="0.099579"/>
        <testcase name="testValidateSchema with data set &quot;dependencies / property-dependency.json / valid - not dependant&quot;" assertions="1" time="0.097772"/>
        <testcase name="testValidateSchema with data set &quot;dependencies / property-dependency.json / valid non-object&quot;" assertions="1" time="0.097780"/>
        <testcase name="testValidateSchema with data set &quot;dependencies / property-dependency.json / invalid&quot;" assertions="1" time="0.105052"/>
        <testcase name="testValidateSchema with data set &quot;dependencies / schema-dependency.json / valid - dependant&quot;" assertions="1" time="0.131691"/>
        <testcase name="testValidateSchema with data set &quot;dependencies / schema-dependency.json / valid - not dependant&quot;" assertions="1" time="0.126298"/>
        <testcase name="testValidateSchema with data set &quot;dependencies / schema-dependency.json / valid non-object&quot;" assertions="1" time="0.125712"/>
        <testcase name="testValidateSchema with data set &quot;dependencies / schema-dependency.json / invalid&quot;" assertions="1" time="0.131164"/>
        <testcase name="testValidateSchema with data set &quot;items / multiple-schemas.json / valid&quot;" assertions="1" time="0.156990"/>
        <testcase name="testValidateSchema with data set &quot;items / multiple-schemas.json / invalid&quot;" assertions="1" time="0.156337"/>
        <testcase name="testValidateSchema with data set &quot;items / additionalItems-schema.json / valid array&quot;" assertions="1" time="0.138366"/>
        <testcase name="testValidateSchema with data set &quot;items / additionalItems-schema.json / valid non-array&quot;" assertions="1" time="0.135416"/>
        <testcase name="testValidateSchema with data set &quot;items / additionalItems-schema.json / invalid&quot;" assertions="1" time="0.140200"/>
        <testcase name="testValidateSchema with data set &quot;items / additionalItems-false.json / valid&quot;" assertions="1" time="0.132797"/>
        <testcase name="testValidateSchema with data set &quot;items / additionalItems-false.json / invalid&quot;" assertions="1" time="0.136204"/>
        <testcase name="testValidateSchema with data set &quot;items / single-schema.json / valid&quot;" assertions="1" time="0.099231"/>
        <testcase name="testValidateSchema with data set &quot;items / single-schema.json / invalid&quot;" assertions="1" time="0.105838"/>
        <testcase name="testValidateSchema with data set &quot;minProperties / minProperties.json / valid object&quot;" assertions="1" time="0.119750"/>
        <testcase name="testValidateSchema with data set &quot;minProperties / minProperties.json / valid non-object&quot;" assertions="1" time="0.071791"/>
        <testcase name="testValidateSchema with data set &quot;minProperties / minProperties.json / invalid&quot;" assertions="1" time="0.071205"/>
        <testcase name="testValidateSchema with data set &quot;not / not.json / valid integer&quot;" assertions="1" time="0.090084"/>
        <testcase name="testValidateSchema with data set &quot;not / not.json / valid floating point value&quot;" assertions="1" time="0.088589"/>
        <testcase name="testValidateSchema with data set &quot;not / not.json / invalid&quot;" assertions="1" time="0.088689"/>
        <testcase name="testValidateSchema with data set &quot;minDateTime / minDateTime.toml / valid date/time&quot;" assertions="1" time="0.107725"/>
        <testcase name="testValidateSchema with data set &quot;minDateTime / minDateTime.toml / valid non-date/time&quot;" assertions="1" time="0.103871"/>
        <testcase name="testValidateSchema with data set &quot;minDateTime / minDateTime.toml / invalid&quot;" assertions="1" time="0.106747"/>
        <testcase name="testValidateSchema with data set &quot;minItems / minItems.json / valid array&quot;" assertions="1" time="0.070537"/>
        <testcase name="testValidateSchema with data set &quot;minItems / minItems.json / valid non-array&quot;" assertions="1" time="0.070009"/>
        <testcase name="testValidateSchema with data set &quot;minItems / minItems.json / invalid&quot;" assertions="1" time="0.070198"/>
      </testsuite>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Validation\DefaultValueTransformTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Validation/DefaultValueTransformTest.php" namespace="Eloquent\Schemer\Validation" fullPackage="Eloquent.Schemer.Validation" tests="6" assertions="12" failures="0" errors="0" time="0.165763">
      <testsuite name="Eloquent\Schemer\Validation\DefaultValueTransformTest::testTransform" tests="6" assertions="12" failures="0" errors="0" time="0.165763">
        <testcase name="testTransform with data set &quot;object-properties.json / object missing defaults&quot;" assertions="2" time="0.034886"/>
        <testcase name="testTransform with data set &quot;object-properties.json / object not missing defaults&quot;" assertions="2" time="0.030395"/>
        <testcase name="testTransform with data set &quot;object-properties.json / array unchanged&quot;" assertions="2" time="0.020875"/>
        <testcase name="testTransform with data set &quot;array-items.json / array missing defaults&quot;" assertions="2" time="0.028705"/>
        <testcase name="testTransform with data set &quot;array-items.json / array not missing defaults&quot;" assertions="2" time="0.029706"/>
        <testcase name="testTransform with data set &quot;array-items.json / object unchanged&quot;" assertions="2" time="0.021196"/>
      </testsuite>
    </testsuite>
  </testsuite>
</testsuites>
