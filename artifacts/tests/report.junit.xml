<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="" tests="729" assertions="791" failures="0" errors="0" time="18.091781">
    <testsuite name="Eloquent\Schemer\Constraint\Factory\MetaSchemaFactoryTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Constraint/Factory/MetaSchemaFactoryTest.php" namespace="Eloquent\Schemer\Constraint\Factory" fullPackage="Eloquent.Schemer.Constraint.Factory" tests="1" assertions="1" failures="0" errors="0" time="0.031894">
      <testcase name="testCreate" class="Eloquent\Schemer\Constraint\Factory\MetaSchemaFactoryTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Constraint/Factory/MetaSchemaFactoryTest.php" line="25" assertions="1" time="0.031894"/>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Constraint\Factory\SchemaFactoryTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Constraint/Factory/SchemaFactoryTest.php" namespace="Eloquent\Schemer\Constraint\Factory" fullPackage="Eloquent.Schemer.Constraint.Factory" tests="1" assertions="1" failures="0" errors="0" time="0.060561">
      <testcase name="testRecursiveSchemaCreation" class="Eloquent\Schemer\Constraint\Factory\SchemaFactoryTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Constraint/Factory/SchemaFactoryTest.php" line="50" assertions="1" time="0.060561"/>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Pointer\PointerFactoryTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Pointer/PointerFactoryTest.php" namespace="Eloquent\Schemer\Pointer" fullPackage="Eloquent.Schemer.Pointer" tests="4" assertions="7" failures="0" errors="0" time="0.052739">
      <testsuite name="Eloquent\Schemer\Pointer\PointerFactoryTest::testCreate" tests="3" assertions="6" failures="0" errors="0" time="0.043473">
        <testcase name="testCreate with data set &quot;Empty pointer&quot;" assertions="2" time="0.022739"/>
        <testcase name="testCreate with data set &quot;Pointer with single empty string atom&quot;" assertions="2" time="0.008283"/>
        <testcase name="testCreate with data set &quot;Escaped characters in atoms&quot;" assertions="2" time="0.012451"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Pointer\PointerFactoryTest::testCreateFailure" tests="1" assertions="1" failures="0" errors="0" time="0.009266">
        <testcase name="testCreateFailure with data set &quot;No leading separator&quot;" assertions="1" time="0.009266"/>
      </testsuite>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Pointer\PointerTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Pointer/PointerTest.php" namespace="Eloquent\Schemer\Pointer" fullPackage="Eloquent.Schemer.Pointer" tests="3" assertions="3" failures="0" errors="0" time="0.013723">
      <testsuite name="Eloquent\Schemer\Pointer\PointerTest::testString" tests="3" assertions="3" failures="0" errors="0" time="0.013723">
        <testcase name="testString with data set &quot;Empty pointer&quot;" assertions="1" time="0.004600"/>
        <testcase name="testString with data set &quot;Pointer with single empty string atom&quot;" assertions="1" time="0.004459"/>
        <testcase name="testString with data set &quot;Escaped characters in atoms&quot;" assertions="1" time="0.004664"/>
      </testsuite>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Pointer\Resolver\PointerResolverTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Pointer/Resolver/PointerResolverTest.php" namespace="Eloquent\Schemer\Pointer\Resolver" fullPackage="Eloquent.Schemer.Pointer.Resolver" tests="12" assertions="24" failures="0" errors="0" time="0.295300">
      <testsuite name="Eloquent\Schemer\Pointer\Resolver\PointerResolverTest::testResolver" tests="12" assertions="24" failures="0" errors="0" time="0.295300">
        <testcase name="testResolver with data set &quot;spec-examples.json / example 1&quot;" assertions="2" time="0.053495"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 2&quot;" assertions="2" time="0.026772"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 3&quot;" assertions="2" time="0.021820"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 4&quot;" assertions="2" time="0.021507"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 5&quot;" assertions="2" time="0.021713"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 6&quot;" assertions="2" time="0.021379"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 7&quot;" assertions="2" time="0.021142"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 8&quot;" assertions="2" time="0.021387"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 9&quot;" assertions="2" time="0.021061"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 10&quot;" assertions="2" time="0.021522"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 11&quot;" assertions="2" time="0.021472"/>
        <testcase name="testResolver with data set &quot;spec-examples.json / example 12&quot;" assertions="2" time="0.022030"/>
      </testsuite>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Reader\ReaderTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reader/ReaderTest.php" namespace="Eloquent\Schemer\Reader" fullPackage="Eloquent.Schemer.Reader" tests="3" assertions="6" failures="0" errors="0" time="0.058164">
      <testcase name="testReadStringJson" class="Eloquent\Schemer\Reader\ReaderTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reader/ReaderTest.php" line="32" assertions="2" time="0.020032"/>
      <testcase name="testReadStringToml" class="Eloquent\Schemer\Reader\ReaderTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reader/ReaderTest.php" line="45" assertions="2" time="0.016386"/>
      <testcase name="testReadStringYaml" class="Eloquent\Schemer\Reader\ReaderTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reader/ReaderTest.php" line="57" assertions="2" time="0.021746"/>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Reference\ReferenceResolverTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reference/ReferenceResolverTest.php" namespace="Eloquent\Schemer\Reference" fullPackage="Eloquent.Schemer.Reference" tests="13" assertions="24" failures="0" errors="0" time="0.985035">
      <testsuite name="Eloquent\Schemer\Reference\ReferenceResolverTest::testResolver" tests="8" assertions="16" failures="0" errors="0" time="0.619726">
        <testcase name="testResolver with data set &quot;complete-document&quot;" assertions="2" time="0.071174"/>
        <testcase name="testResolver with data set &quot;explicit-type&quot;" assertions="2" time="0.066363"/>
        <testcase name="testResolver with data set &quot;implicit-type&quot;" assertions="2" time="0.072051"/>
        <testcase name="testResolver with data set &quot;inline&quot;" assertions="2" time="0.060555"/>
        <testcase name="testResolver with data set &quot;nested&quot;" assertions="2" time="0.084987"/>
        <testcase name="testResolver with data set &quot;partial-document&quot;" assertions="2" time="0.062971"/>
        <testcase name="testResolver with data set &quot;switching-scope&quot;" assertions="2" time="0.106462"/>
        <testcase name="testResolver with data set &quot;switching-scope-non-pointer-fragment&quot;" assertions="2" time="0.095163"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Reference\ReferenceResolverTest::testResolveResolvableRecursive" tests="2" assertions="2" failures="0" errors="0" time="0.165857">
        <testcase name="testResolveResolvableRecursive with data set &quot;resolvable-inline.json&quot;" assertions="1" time="0.086731"/>
        <testcase name="testResolveResolvableRecursive with data set &quot;resolvable-external.json&quot;" assertions="1" time="0.079126"/>
      </testsuite>
      <testcase name="testResolveResolvableRecursiveFucked" class="Eloquent\Schemer\Reference\ReferenceResolverTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reference/ReferenceResolverTest.php" line="106" assertions="1" time="0.061986"/>
      <testcase name="testResolveUnresolvableRecursiveInline" class="Eloquent\Schemer\Reference\ReferenceResolverTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reference/ReferenceResolverTest.php" line="118" assertions="3" time="0.070211"/>
      <testcase name="testResolveUnresolvableRecursiveExternal" class="Eloquent\Schemer\Reference\ReferenceResolverTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reference/ReferenceResolverTest.php" line="132" assertions="2" time="0.067254"/>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Reference\ResolutionScopeMapTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reference/ResolutionScopeMapTest.php" namespace="Eloquent\Schemer\Reference" fullPackage="Eloquent.Schemer.Reference" tests="9" assertions="17" failures="0" errors="0" time="0.498242">
      <testsuite name="Eloquent\Schemer\Reference\ResolutionScopeMapTest::testPointerByUri" tests="9" assertions="17" failures="0" errors="0" time="0.498242">
        <testcase name="testPointerByUri with data set &quot;document root match&quot;" assertions="2" time="0.052883"/>
        <testcase name="testPointerByUri with data set &quot;document root match with pointer-fragment&quot;" assertions="2" time="0.060114"/>
        <testcase name="testPointerByUri with data set &quot;document root match with non-pointer fragment&quot;" assertions="2" time="0.051926"/>
        <testcase name="testPointerByUri with data set &quot;later overlapping pointer-fragment match ignored&quot;" assertions="2" time="0.054270"/>
        <testcase name="testPointerByUri with data set &quot;exact URI match&quot;" assertions="2" time="0.053039"/>
        <testcase name="testPointerByUri with data set &quot;URI match with pointer-fragment&quot;" assertions="2" time="0.056630"/>
        <testcase name="testPointerByUri with data set &quot;URI match with non-pointer fragment&quot;" assertions="2" time="0.053628"/>
        <testcase name="testPointerByUri with data set &quot;URI match with parent pointer-fragment&quot;" assertions="2" time="0.064267"/>
        <testcase name="testPointerByUri with data set &quot;non match&quot;" assertions="1" time="0.051485"/>
      </testsuite>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Reference\SwitchingResolutionScopeMapFactoryTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Reference/SwitchingResolutionScopeMapFactoryTest.php" namespace="Eloquent\Schemer\Reference" fullPackage="Eloquent.Schemer.Reference" tests="2" assertions="6" failures="0" errors="0" time="0.132454">
      <testsuite name="Eloquent\Schemer\Reference\SwitchingResolutionScopeMapFactoryTest::testFactory" tests="2" assertions="6" failures="0" errors="0" time="0.132454">
        <testcase name="testFactory with data set &quot;unspecified-root.json&quot;" assertions="3" time="0.030956"/>
        <testcase name="testFactory with data set &quot;spec-example.json&quot;" assertions="3" time="0.101498"/>
      </testsuite>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" namespace="Eloquent\Schemer\Uri" fullPackage="Eloquent.Schemer.Uri" tests="50" assertions="60" failures="0" errors="0" time="0.396565">
      <testsuite name="Eloquent\Schemer\Uri\HttpUriTest::testValidScheme" tests="4" assertions="4" failures="0" errors="0" time="0.023129">
        <testcase name="testValidScheme with data set #0" assertions="1" time="0.006551"/>
        <testcase name="testValidScheme with data set #1" assertions="1" time="0.005507"/>
        <testcase name="testValidScheme with data set #2" assertions="1" time="0.005426"/>
        <testcase name="testValidScheme with data set #3" assertions="1" time="0.005645"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\HttpUriTest::testInvalidScheme" tests="4" assertions="4" failures="0" errors="0" time="0.022060">
        <testcase name="testInvalidScheme with data set #0" assertions="1" time="0.006548"/>
        <testcase name="testInvalidScheme with data set #1" assertions="1" time="0.005145"/>
        <testcase name="testInvalidScheme with data set #2" assertions="1" time="0.005131"/>
        <testcase name="testInvalidScheme with data set #3" assertions="1" time="0.005236"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\HttpUriTest::testValidateSchemeInvalid" tests="4" assertions="4" failures="0" errors="0" time="0.018983">
        <testcase name="testValidateSchemeInvalid with data set #0" assertions="1" time="0.004826"/>
        <testcase name="testValidateSchemeInvalid with data set #1" assertions="1" time="0.004707"/>
        <testcase name="testValidateSchemeInvalid with data set #2" assertions="1" time="0.004661"/>
        <testcase name="testValidateSchemeInvalid with data set #3" assertions="1" time="0.004789"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\HttpUriTest::testValidateHost" tests="21" assertions="21" failures="0" errors="0" time="0.184455">
        <testcase name="testValidateHost with data set #0" assertions="1" time="0.012554"/>
        <testcase name="testValidateHost with data set #1" assertions="1" time="0.008043"/>
        <testcase name="testValidateHost with data set #2" assertions="1" time="0.008331"/>
        <testcase name="testValidateHost with data set #3" assertions="1" time="0.008315"/>
        <testcase name="testValidateHost with data set #4" assertions="1" time="0.008531"/>
        <testcase name="testValidateHost with data set #5" assertions="1" time="0.008344"/>
        <testcase name="testValidateHost with data set #6" assertions="1" time="0.011773"/>
        <testcase name="testValidateHost with data set #7" assertions="1" time="0.011953"/>
        <testcase name="testValidateHost with data set #8" assertions="1" time="0.008703"/>
        <testcase name="testValidateHost with data set #9" assertions="1" time="0.008321"/>
        <testcase name="testValidateHost with data set #10" assertions="1" time="0.008074"/>
        <testcase name="testValidateHost with data set #11" assertions="1" time="0.008963"/>
        <testcase name="testValidateHost with data set #12" assertions="1" time="0.008868"/>
        <testcase name="testValidateHost with data set #13" assertions="1" time="0.008930"/>
        <testcase name="testValidateHost with data set #14" assertions="1" time="0.005897"/>
        <testcase name="testValidateHost with data set #15" assertions="1" time="0.010155"/>
        <testcase name="testValidateHost with data set #16" assertions="1" time="0.008386"/>
        <testcase name="testValidateHost with data set #17" assertions="1" time="0.006929"/>
        <testcase name="testValidateHost with data set #18" assertions="1" time="0.008475"/>
        <testcase name="testValidateHost with data set #19" assertions="1" time="0.008150"/>
        <testcase name="testValidateHost with data set #20" assertions="1" time="0.006759"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\HttpUriTest::testNormalizationRemovesPort" tests="5" assertions="5" failures="0" errors="0" time="0.042903">
        <testcase name="testNormalizationRemovesPort with data set #0" assertions="1" time="0.008638"/>
        <testcase name="testNormalizationRemovesPort with data set #1" assertions="1" time="0.008598"/>
        <testcase name="testNormalizationRemovesPort with data set #2" assertions="1" time="0.008377"/>
        <testcase name="testNormalizationRemovesPort with data set #3" assertions="1" time="0.008505"/>
        <testcase name="testNormalizationRemovesPort with data set #4" assertions="1" time="0.008785"/>
      </testsuite>
      <testcase name="testUserIsNullByDefaultWhenNoUserInfoIsProvided" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="159" assertions="1" time="0.007259"/>
      <testcase name="testPasswordIsNullByDefaultWhenNoUserInfoIsProvided" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="166" assertions="1" time="0.007246"/>
      <testcase name="testCanParseUsernameAndPasswordFromUriNotContainingPort" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="173" assertions="3" time="0.011014"/>
      <testcase name="testCanParseUsernameAndPasswordFromUriContainingPort" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="182" assertions="3" time="0.010756"/>
      <testcase name="testCanParseUsernameContainingAtMarkFromUri" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="191" assertions="3" time="0.010198"/>
      <testcase name="testCanParsePasswordContainingAtMarkFromUri" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="200" assertions="3" time="0.010907"/>
      <testcase name="testUserInfoCanOmitPassword" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="209" assertions="3" time="0.010282"/>
      <testcase name="testGetPortReturnsDefaultPortHttp" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="218" assertions="1" time="0.007064"/>
      <testcase name="testGetPortReturnsDefaultPortHttps" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="224" assertions="1" time="0.007046"/>
      <testcase name="testGetPortDoesntModifyUrlHttp" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="230" assertions="1" time="0.008017"/>
      <testcase name="testGetPortDoesntModifyUrlHttps" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="238" assertions="1" time="0.007745"/>
      <testcase name="testValidHostTypesWithUnderScore" class="Eloquent\Schemer\Uri\HttpUriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/HttpUriTest.php" line="246" assertions="1" time="0.007501"/>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Uri\UriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/UriTest.php" namespace="Eloquent\Schemer\Uri" fullPackage="Eloquent.Schemer.Uri" tests="469" assertions="474" failures="0" errors="0" time="3.508345">
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testParseComposeUri" tests="30" assertions="30" failures="0" errors="0" time="0.207526">
        <testcase name="testParseComposeUri with data set #0" assertions="1" time="0.006539"/>
        <testcase name="testParseComposeUri with data set #1" assertions="1" time="0.006928"/>
        <testcase name="testParseComposeUri with data set #2" assertions="1" time="0.008181"/>
        <testcase name="testParseComposeUri with data set #3" assertions="1" time="0.006331"/>
        <testcase name="testParseComposeUri with data set #4" assertions="1" time="0.006259"/>
        <testcase name="testParseComposeUri with data set #5" assertions="1" time="0.006491"/>
        <testcase name="testParseComposeUri with data set #6" assertions="1" time="0.006362"/>
        <testcase name="testParseComposeUri with data set #7" assertions="1" time="0.006324"/>
        <testcase name="testParseComposeUri with data set #8" assertions="1" time="0.006425"/>
        <testcase name="testParseComposeUri with data set #9" assertions="1" time="0.007467"/>
        <testcase name="testParseComposeUri with data set #10" assertions="1" time="0.007571"/>
        <testcase name="testParseComposeUri with data set #11" assertions="1" time="0.007948"/>
        <testcase name="testParseComposeUri with data set #12" assertions="1" time="0.007717"/>
        <testcase name="testParseComposeUri with data set #13" assertions="1" time="0.007882"/>
        <testcase name="testParseComposeUri with data set #14" assertions="1" time="0.007910"/>
        <testcase name="testParseComposeUri with data set #15" assertions="1" time="0.007386"/>
        <testcase name="testParseComposeUri with data set #16" assertions="1" time="0.006413"/>
        <testcase name="testParseComposeUri with data set #17" assertions="1" time="0.006221"/>
        <testcase name="testParseComposeUri with data set #18" assertions="1" time="0.006446"/>
        <testcase name="testParseComposeUri with data set #19" assertions="1" time="0.007235"/>
        <testcase name="testParseComposeUri with data set #20" assertions="1" time="0.007732"/>
        <testcase name="testParseComposeUri with data set #21" assertions="1" time="0.005875"/>
        <testcase name="testParseComposeUri with data set #22" assertions="1" time="0.007401"/>
        <testcase name="testParseComposeUri with data set #23" assertions="1" time="0.006319"/>
        <testcase name="testParseComposeUri with data set #24" assertions="1" time="0.006304"/>
        <testcase name="testParseComposeUri with data set #25" assertions="1" time="0.008149"/>
        <testcase name="testParseComposeUri with data set #26" assertions="1" time="0.005931"/>
        <testcase name="testParseComposeUri with data set #27" assertions="1" time="0.006647"/>
        <testcase name="testParseComposeUri with data set #28" assertions="1" time="0.006750"/>
        <testcase name="testParseComposeUri with data set #29" assertions="1" time="0.006382"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testComposeNewUriAndCastToString" tests="7" assertions="7" failures="0" errors="0" time="0.049788">
        <testcase name="testComposeNewUriAndCastToString with data set #0" assertions="1" time="0.007957"/>
        <testcase name="testComposeNewUriAndCastToString with data set #1" assertions="1" time="0.006301"/>
        <testcase name="testComposeNewUriAndCastToString with data set #2" assertions="1" time="0.007973"/>
        <testcase name="testComposeNewUriAndCastToString with data set #3" assertions="1" time="0.006204"/>
        <testcase name="testComposeNewUriAndCastToString with data set #4" assertions="1" time="0.007352"/>
        <testcase name="testComposeNewUriAndCastToString with data set #5" assertions="1" time="0.007762"/>
        <testcase name="testComposeNewUriAndCastToString with data set #6" assertions="1" time="0.006238"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testParseScheme" tests="7" assertions="7" failures="0" errors="0" time="0.038912">
        <testcase name="testParseScheme with data set #0" assertions="1" time="0.005611"/>
        <testcase name="testParseScheme with data set #1" assertions="1" time="0.005600"/>
        <testcase name="testParseScheme with data set #2" assertions="1" time="0.005438"/>
        <testcase name="testParseScheme with data set #3" assertions="1" time="0.005629"/>
        <testcase name="testParseScheme with data set #4" assertions="1" time="0.005696"/>
        <testcase name="testParseScheme with data set #5" assertions="1" time="0.005631"/>
        <testcase name="testParseScheme with data set #6" assertions="1" time="0.005307"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testParseSchemeInvalidInput" tests="4" assertions="4" failures="0" errors="0" time="0.020766">
        <testcase name="testParseSchemeInvalidInput with data set #0" assertions="1" time="0.005013"/>
        <testcase name="testParseSchemeInvalidInput with data set #1" assertions="1" time="0.005171"/>
        <testcase name="testParseSchemeInvalidInput with data set #2" assertions="1" time="0.005253"/>
        <testcase name="testParseSchemeInvalidInput with data set #3" assertions="1" time="0.005329"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testMagicToStringEmptyIfInvalid" tests="4" assertions="4" failures="0" errors="0" time="0.024624">
        <testcase name="testMagicToStringEmptyIfInvalid with data set #0" assertions="1" time="0.006394"/>
        <testcase name="testMagicToStringEmptyIfInvalid with data set #1" assertions="1" time="0.005959"/>
        <testcase name="testMagicToStringEmptyIfInvalid with data set #2" assertions="1" time="0.006104"/>
        <testcase name="testMagicToStringEmptyIfInvalid with data set #3" assertions="1" time="0.006167"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testToStringThrowsExceptionIfInvalid" tests="4" assertions="4" failures="0" errors="0" time="0.020540">
        <testcase name="testToStringThrowsExceptionIfInvalid with data set #0" assertions="1" time="0.005247"/>
        <testcase name="testToStringThrowsExceptionIfInvalid with data set #1" assertions="1" time="0.005109"/>
        <testcase name="testToStringThrowsExceptionIfInvalid with data set #2" assertions="1" time="0.005090"/>
        <testcase name="testToStringThrowsExceptionIfInvalid with data set #3" assertions="1" time="0.005094"/>
      </testsuite>
      <testcase name="testCanParseMalformedUrlZF11286" class="Eloquent\Schemer\Uri\UriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/UriTest.php" line="109" assertions="1" time="0.010474"/>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testGetScheme" tests="7" assertions="7" failures="0" errors="0" time="0.044944">
        <testcase name="testGetScheme with data set #0" assertions="1" time="0.007357"/>
        <testcase name="testGetScheme with data set #1" assertions="1" time="0.005784"/>
        <testcase name="testGetScheme with data set #2" assertions="1" time="0.007225"/>
        <testcase name="testGetScheme with data set #3" assertions="1" time="0.005201"/>
        <testcase name="testGetScheme with data set #4" assertions="1" time="0.007243"/>
        <testcase name="testGetScheme with data set #5" assertions="1" time="0.006992"/>
        <testcase name="testGetScheme with data set #6" assertions="1" time="0.005142"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testGetUserInfo" tests="7" assertions="7" failures="0" errors="0" time="0.042886">
        <testcase name="testGetUserInfo with data set #0" assertions="1" time="0.006788"/>
        <testcase name="testGetUserInfo with data set #1" assertions="1" time="0.005329"/>
        <testcase name="testGetUserInfo with data set #2" assertions="1" time="0.007286"/>
        <testcase name="testGetUserInfo with data set #3" assertions="1" time="0.005010"/>
        <testcase name="testGetUserInfo with data set #4" assertions="1" time="0.006643"/>
        <testcase name="testGetUserInfo with data set #5" assertions="1" time="0.006684"/>
        <testcase name="testGetUserInfo with data set #6" assertions="1" time="0.005146"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testGetHost" tests="7" assertions="7" failures="0" errors="0" time="0.045880">
        <testcase name="testGetHost with data set #0" assertions="1" time="0.007441"/>
        <testcase name="testGetHost with data set #1" assertions="1" time="0.006070"/>
        <testcase name="testGetHost with data set #2" assertions="1" time="0.007151"/>
        <testcase name="testGetHost with data set #3" assertions="1" time="0.005217"/>
        <testcase name="testGetHost with data set #4" assertions="1" time="0.007435"/>
        <testcase name="testGetHost with data set #5" assertions="1" time="0.007267"/>
        <testcase name="testGetHost with data set #6" assertions="1" time="0.005299"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testGetPort" tests="7" assertions="7" failures="0" errors="0" time="0.042891">
        <testcase name="testGetPort with data set #0" assertions="1" time="0.006669"/>
        <testcase name="testGetPort with data set #1" assertions="1" time="0.005158"/>
        <testcase name="testGetPort with data set #2" assertions="1" time="0.006754"/>
        <testcase name="testGetPort with data set #3" assertions="1" time="0.005225"/>
        <testcase name="testGetPort with data set #4" assertions="1" time="0.007049"/>
        <testcase name="testGetPort with data set #5" assertions="1" time="0.006763"/>
        <testcase name="testGetPort with data set #6" assertions="1" time="0.005273"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testGetPath" tests="7" assertions="7" failures="0" errors="0" time="0.047158">
        <testcase name="testGetPath with data set #0" assertions="1" time="0.007223"/>
        <testcase name="testGetPath with data set #1" assertions="1" time="0.006065"/>
        <testcase name="testGetPath with data set #2" assertions="1" time="0.007479"/>
        <testcase name="testGetPath with data set #3" assertions="1" time="0.005807"/>
        <testcase name="testGetPath with data set #4" assertions="1" time="0.007477"/>
        <testcase name="testGetPath with data set #5" assertions="1" time="0.007426"/>
        <testcase name="testGetPath with data set #6" assertions="1" time="0.005682"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testGetQuery" tests="7" assertions="7" failures="0" errors="0" time="0.043534">
        <testcase name="testGetQuery with data set #0" assertions="1" time="0.007298"/>
        <testcase name="testGetQuery with data set #1" assertions="1" time="0.005502"/>
        <testcase name="testGetQuery with data set #2" assertions="1" time="0.006767"/>
        <testcase name="testGetQuery with data set #3" assertions="1" time="0.005358"/>
        <testcase name="testGetQuery with data set #4" assertions="1" time="0.006561"/>
        <testcase name="testGetQuery with data set #5" assertions="1" time="0.006849"/>
        <testcase name="testGetQuery with data set #6" assertions="1" time="0.005199"/>
      </testsuite>
      <testcase name="testGetQueryAsArrayReturnsCorrectArray" class="Eloquent\Schemer\Uri\UriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/UriTest.php" line="227" assertions="2" time="0.014473"/>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testGetFragment" tests="7" assertions="7" failures="0" errors="0" time="0.043618">
        <testcase name="testGetFragment with data set #0" assertions="1" time="0.006930"/>
        <testcase name="testGetFragment with data set #1" assertions="1" time="0.005301"/>
        <testcase name="testGetFragment with data set #2" assertions="1" time="0.006806"/>
        <testcase name="testGetFragment with data set #3" assertions="1" time="0.005239"/>
        <testcase name="testGetFragment with data set #4" assertions="1" time="0.006587"/>
        <testcase name="testGetFragment with data set #5" assertions="1" time="0.006829"/>
        <testcase name="testGetFragment with data set #6" assertions="1" time="0.005926"/>
      </testsuite>
      <testcase name="testSetSchemeNull" class="Eloquent\Schemer\Uri\UriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/UriTest.php" line="266" assertions="2" time="0.007433"/>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testSetSchemeValid" tests="7" assertions="7" failures="0" errors="0" time="0.039409">
        <testcase name="testSetSchemeValid with data set #0" assertions="1" time="0.005832"/>
        <testcase name="testSetSchemeValid with data set #1" assertions="1" time="0.005813"/>
        <testcase name="testSetSchemeValid with data set #2" assertions="1" time="0.005576"/>
        <testcase name="testSetSchemeValid with data set #3" assertions="1" time="0.005536"/>
        <testcase name="testSetSchemeValid with data set #4" assertions="1" time="0.005507"/>
        <testcase name="testSetSchemeValid with data set #5" assertions="1" time="0.005539"/>
        <testcase name="testSetSchemeValid with data set #6" assertions="1" time="0.005606"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testSetInvalidScheme" tests="5" assertions="5" failures="0" errors="0" time="0.026929">
        <testcase name="testSetInvalidScheme with data set #0" assertions="1" time="0.005422"/>
        <testcase name="testSetInvalidScheme with data set #1" assertions="1" time="0.005426"/>
        <testcase name="testSetInvalidScheme with data set #2" assertions="1" time="0.005207"/>
        <testcase name="testSetInvalidScheme with data set #3" assertions="1" time="0.005427"/>
        <testcase name="testSetInvalidScheme with data set #4" assertions="1" time="0.005447"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testSetGetValidHost" tests="24" assertions="24" failures="0" errors="0" time="0.165791">
        <testcase name="testSetGetValidHost with data set #0" assertions="1" time="0.006234"/>
        <testcase name="testSetGetValidHost with data set #1" assertions="1" time="0.006386"/>
        <testcase name="testSetGetValidHost with data set #2" assertions="1" time="0.006259"/>
        <testcase name="testSetGetValidHost with data set #3" assertions="1" time="0.006411"/>
        <testcase name="testSetGetValidHost with data set #4" assertions="1" time="0.007392"/>
        <testcase name="testSetGetValidHost with data set #5" assertions="1" time="0.007133"/>
        <testcase name="testSetGetValidHost with data set #6" assertions="1" time="0.007155"/>
        <testcase name="testSetGetValidHost with data set #7" assertions="1" time="0.007102"/>
        <testcase name="testSetGetValidHost with data set #8" assertions="1" time="0.007296"/>
        <testcase name="testSetGetValidHost with data set #9" assertions="1" time="0.007281"/>
        <testcase name="testSetGetValidHost with data set #10" assertions="1" time="0.007122"/>
        <testcase name="testSetGetValidHost with data set #11" assertions="1" time="0.007214"/>
        <testcase name="testSetGetValidHost with data set #12" assertions="1" time="0.006955"/>
        <testcase name="testSetGetValidHost with data set #13" assertions="1" time="0.006738"/>
        <testcase name="testSetGetValidHost with data set #14" assertions="1" time="0.007011"/>
        <testcase name="testSetGetValidHost with data set #15" assertions="1" time="0.007159"/>
        <testcase name="testSetGetValidHost with data set #16" assertions="1" time="0.006842"/>
        <testcase name="testSetGetValidHost with data set #17" assertions="1" time="0.007001"/>
        <testcase name="testSetGetValidHost with data set #18" assertions="1" time="0.006386"/>
        <testcase name="testSetGetValidHost with data set #19" assertions="1" time="0.006904"/>
        <testcase name="testSetGetValidHost with data set #20" assertions="1" time="0.006805"/>
        <testcase name="testSetGetValidHost with data set #21" assertions="1" time="0.007142"/>
        <testcase name="testSetGetValidHost with data set #22" assertions="1" time="0.007112"/>
        <testcase name="testSetGetValidHost with data set #23" assertions="1" time="0.006751"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testSetInvalidHost" tests="3" assertions="3" failures="0" errors="0" time="0.026574">
        <testcase name="testSetInvalidHost with data set #0" assertions="1" time="0.008775"/>
        <testcase name="testSetInvalidHost with data set #1" assertions="1" time="0.009309"/>
        <testcase name="testSetInvalidHost with data set #2" assertions="1" time="0.008490"/>
      </testsuite>
      <testcase name="testSetNullHost" class="Eloquent\Schemer\Uri\UriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/UriTest.php" line="331" assertions="1" time="0.006757"/>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testSetQueryFromArray" tests="3" assertions="3" failures="0" errors="0" time="0.018427">
        <testcase name="testSetQueryFromArray with data set #0" assertions="1" time="0.006396"/>
        <testcase name="testSetQueryFromArray with data set #1" assertions="1" time="0.005907"/>
        <testcase name="testSetQueryFromArray with data set #2" assertions="1" time="0.006124"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidUriIsValid" tests="30" assertions="30" failures="0" errors="0" time="0.171727">
        <testcase name="testValidUriIsValid with data set #0" assertions="1" time="0.005350"/>
        <testcase name="testValidUriIsValid with data set #1" assertions="1" time="0.006421"/>
        <testcase name="testValidUriIsValid with data set #2" assertions="1" time="0.006916"/>
        <testcase name="testValidUriIsValid with data set #3" assertions="1" time="0.005277"/>
        <testcase name="testValidUriIsValid with data set #4" assertions="1" time="0.005102"/>
        <testcase name="testValidUriIsValid with data set #5" assertions="1" time="0.005068"/>
        <testcase name="testValidUriIsValid with data set #6" assertions="1" time="0.005299"/>
        <testcase name="testValidUriIsValid with data set #7" assertions="1" time="0.005882"/>
        <testcase name="testValidUriIsValid with data set #8" assertions="1" time="0.005186"/>
        <testcase name="testValidUriIsValid with data set #9" assertions="1" time="0.006724"/>
        <testcase name="testValidUriIsValid with data set #10" assertions="1" time="0.006671"/>
        <testcase name="testValidUriIsValid with data set #11" assertions="1" time="0.006501"/>
        <testcase name="testValidUriIsValid with data set #12" assertions="1" time="0.006600"/>
        <testcase name="testValidUriIsValid with data set #13" assertions="1" time="0.006619"/>
        <testcase name="testValidUriIsValid with data set #14" assertions="1" time="0.006482"/>
        <testcase name="testValidUriIsValid with data set #15" assertions="1" time="0.006339"/>
        <testcase name="testValidUriIsValid with data set #16" assertions="1" time="0.004900"/>
        <testcase name="testValidUriIsValid with data set #17" assertions="1" time="0.005072"/>
        <testcase name="testValidUriIsValid with data set #18" assertions="1" time="0.004904"/>
        <testcase name="testValidUriIsValid with data set #19" assertions="1" time="0.006259"/>
        <testcase name="testValidUriIsValid with data set #20" assertions="1" time="0.006500"/>
        <testcase name="testValidUriIsValid with data set #21" assertions="1" time="0.004994"/>
        <testcase name="testValidUriIsValid with data set #22" assertions="1" time="0.005774"/>
        <testcase name="testValidUriIsValid with data set #23" assertions="1" time="0.004980"/>
        <testcase name="testValidUriIsValid with data set #24" assertions="1" time="0.004967"/>
        <testcase name="testValidUriIsValid with data set #25" assertions="1" time="0.006482"/>
        <testcase name="testValidUriIsValid with data set #26" assertions="1" time="0.005081"/>
        <testcase name="testValidUriIsValid with data set #27" assertions="1" time="0.005146"/>
        <testcase name="testValidUriIsValid with data set #28" assertions="1" time="0.005194"/>
        <testcase name="testValidUriIsValid with data set #29" assertions="1" time="0.005037"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidRelativeUriIsValid" tests="5" assertions="5" failures="0" errors="0" time="0.025311">
        <testcase name="testValidRelativeUriIsValid with data set #0" assertions="1" time="0.005108"/>
        <testcase name="testValidRelativeUriIsValid with data set #1" assertions="1" time="0.004978"/>
        <testcase name="testValidRelativeUriIsValid with data set #2" assertions="1" time="0.005040"/>
        <testcase name="testValidRelativeUriIsValid with data set #3" assertions="1" time="0.005134"/>
        <testcase name="testValidRelativeUriIsValid with data set #4" assertions="1" time="0.005051"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testInvalidUriIsInvalid" tests="4" assertions="4" failures="0" errors="0" time="0.018925">
        <testcase name="testInvalidUriIsInvalid with data set #0" assertions="1" time="0.004735"/>
        <testcase name="testInvalidUriIsInvalid with data set #1" assertions="1" time="0.004709"/>
        <testcase name="testInvalidUriIsInvalid with data set #2" assertions="1" time="0.004732"/>
        <testcase name="testInvalidUriIsInvalid with data set #3" assertions="1" time="0.004749"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testInvalidRelativeUriIsInvalid" tests="6" assertions="6" failures="0" errors="0" time="0.029021">
        <testcase name="testInvalidRelativeUriIsInvalid with data set #0" assertions="1" time="0.004740"/>
        <testcase name="testInvalidRelativeUriIsInvalid with data set #1" assertions="1" time="0.004730"/>
        <testcase name="testInvalidRelativeUriIsInvalid with data set #2" assertions="1" time="0.004784"/>
        <testcase name="testInvalidRelativeUriIsInvalid with data set #3" assertions="1" time="0.004705"/>
        <testcase name="testInvalidRelativeUriIsInvalid with data set #4" assertions="1" time="0.004754"/>
        <testcase name="testInvalidRelativeUriIsInvalid with data set #5" assertions="1" time="0.005308"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidateSchemeValid" tests="7" assertions="7" failures="0" errors="0" time="0.033379">
        <testcase name="testValidateSchemeValid with data set #0" assertions="1" time="0.004769"/>
        <testcase name="testValidateSchemeValid with data set #1" assertions="1" time="0.004759"/>
        <testcase name="testValidateSchemeValid with data set #2" assertions="1" time="0.004787"/>
        <testcase name="testValidateSchemeValid with data set #3" assertions="1" time="0.004796"/>
        <testcase name="testValidateSchemeValid with data set #4" assertions="1" time="0.004760"/>
        <testcase name="testValidateSchemeValid with data set #5" assertions="1" time="0.004752"/>
        <testcase name="testValidateSchemeValid with data set #6" assertions="1" time="0.004756"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidateSchemeInvalid" tests="5" assertions="5" failures="0" errors="0" time="0.023684">
        <testcase name="testValidateSchemeInvalid with data set #0" assertions="1" time="0.004700"/>
        <testcase name="testValidateSchemeInvalid with data set #1" assertions="1" time="0.004715"/>
        <testcase name="testValidateSchemeInvalid with data set #2" assertions="1" time="0.004786"/>
        <testcase name="testValidateSchemeInvalid with data set #3" assertions="1" time="0.004734"/>
        <testcase name="testValidateSchemeInvalid with data set #4" assertions="1" time="0.004749"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidateHostValid" tests="24" assertions="24" failures="0" errors="0" time="0.139700">
        <testcase name="testValidateHostValid with data set #0" assertions="1" time="0.005229"/>
        <testcase name="testValidateHostValid with data set #1" assertions="1" time="0.005209"/>
        <testcase name="testValidateHostValid with data set #2" assertions="1" time="0.005339"/>
        <testcase name="testValidateHostValid with data set #3" assertions="1" time="0.005274"/>
        <testcase name="testValidateHostValid with data set #4" assertions="1" time="0.006069"/>
        <testcase name="testValidateHostValid with data set #5" assertions="1" time="0.006052"/>
        <testcase name="testValidateHostValid with data set #6" assertions="1" time="0.006062"/>
        <testcase name="testValidateHostValid with data set #7" assertions="1" time="0.005962"/>
        <testcase name="testValidateHostValid with data set #8" assertions="1" time="0.005949"/>
        <testcase name="testValidateHostValid with data set #9" assertions="1" time="0.006000"/>
        <testcase name="testValidateHostValid with data set #10" assertions="1" time="0.005954"/>
        <testcase name="testValidateHostValid with data set #11" assertions="1" time="0.005958"/>
        <testcase name="testValidateHostValid with data set #12" assertions="1" time="0.005977"/>
        <testcase name="testValidateHostValid with data set #13" assertions="1" time="0.005923"/>
        <testcase name="testValidateHostValid with data set #14" assertions="1" time="0.005873"/>
        <testcase name="testValidateHostValid with data set #15" assertions="1" time="0.005891"/>
        <testcase name="testValidateHostValid with data set #16" assertions="1" time="0.005963"/>
        <testcase name="testValidateHostValid with data set #17" assertions="1" time="0.005967"/>
        <testcase name="testValidateHostValid with data set #18" assertions="1" time="0.005338"/>
        <testcase name="testValidateHostValid with data set #19" assertions="1" time="0.005908"/>
        <testcase name="testValidateHostValid with data set #20" assertions="1" time="0.005899"/>
        <testcase name="testValidateHostValid with data set #21" assertions="1" time="0.005963"/>
        <testcase name="testValidateHostValid with data set #22" assertions="1" time="0.005976"/>
        <testcase name="testValidateHostValid with data set #23" assertions="1" time="0.005965"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidateHostInvalid" tests="3" assertions="3" failures="0" errors="0" time="0.023826">
        <testcase name="testValidateHostInvalid with data set #0" assertions="1" time="0.007775"/>
        <testcase name="testValidateHostInvalid with data set #1" assertions="1" time="0.008237"/>
        <testcase name="testValidateHostInvalid with data set #2" assertions="1" time="0.007814"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidatePathValid" tests="11" assertions="11" failures="0" errors="0" time="0.052649">
        <testcase name="testValidatePathValid with data set #0" assertions="1" time="0.004864"/>
        <testcase name="testValidatePathValid with data set #1" assertions="1" time="0.004836"/>
        <testcase name="testValidatePathValid with data set #2" assertions="1" time="0.004746"/>
        <testcase name="testValidatePathValid with data set #3" assertions="1" time="0.004731"/>
        <testcase name="testValidatePathValid with data set #4" assertions="1" time="0.004801"/>
        <testcase name="testValidatePathValid with data set #5" assertions="1" time="0.004867"/>
        <testcase name="testValidatePathValid with data set #6" assertions="1" time="0.004734"/>
        <testcase name="testValidatePathValid with data set #7" assertions="1" time="0.004780"/>
        <testcase name="testValidatePathValid with data set #8" assertions="1" time="0.004764"/>
        <testcase name="testValidatePathValid with data set #9" assertions="1" time="0.004795"/>
        <testcase name="testValidatePathValid with data set #10" assertions="1" time="0.004731"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidatePathInvalid" tests="3" assertions="3" failures="0" errors="0" time="0.014343">
        <testcase name="testValidatePathInvalid with data set #0" assertions="1" time="0.004794"/>
        <testcase name="testValidatePathInvalid with data set #1" assertions="1" time="0.004777"/>
        <testcase name="testValidatePathInvalid with data set #2" assertions="1" time="0.004772"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testEncodePathValid" tests="11" assertions="11" failures="0" errors="0" time="0.065644">
        <testcase name="testEncodePathValid with data set #0" assertions="1" time="0.005943"/>
        <testcase name="testEncodePathValid with data set #1" assertions="1" time="0.005970"/>
        <testcase name="testEncodePathValid with data set #2" assertions="1" time="0.005944"/>
        <testcase name="testEncodePathValid with data set #3" assertions="1" time="0.005916"/>
        <testcase name="testEncodePathValid with data set #4" assertions="1" time="0.005914"/>
        <testcase name="testEncodePathValid with data set #5" assertions="1" time="0.006006"/>
        <testcase name="testEncodePathValid with data set #6" assertions="1" time="0.006001"/>
        <testcase name="testEncodePathValid with data set #7" assertions="1" time="0.005989"/>
        <testcase name="testEncodePathValid with data set #8" assertions="1" time="0.006000"/>
        <testcase name="testEncodePathValid with data set #9" assertions="1" time="0.005984"/>
        <testcase name="testEncodePathValid with data set #10" assertions="1" time="0.005977"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testEncodePathInvalid" tests="3" assertions="3" failures="0" errors="0" time="0.018180">
        <testcase name="testEncodePathInvalid with data set #0" assertions="1" time="0.006198"/>
        <testcase name="testEncodePathInvalid with data set #1" assertions="1" time="0.006009"/>
        <testcase name="testEncodePathInvalid with data set #2" assertions="1" time="0.005973"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidQueryFragment" tests="5" assertions="5" failures="0" errors="0" time="0.024406">
        <testcase name="testValidQueryFragment with data set #0" assertions="1" time="0.004907"/>
        <testcase name="testValidQueryFragment with data set #1" assertions="1" time="0.004910"/>
        <testcase name="testValidQueryFragment with data set #2" assertions="1" time="0.004883"/>
        <testcase name="testValidQueryFragment with data set #3" assertions="1" time="0.004864"/>
        <testcase name="testValidQueryFragment with data set #4" assertions="1" time="0.004842"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testInvalidQueryFragment" tests="5" assertions="5" failures="0" errors="0" time="0.024948">
        <testcase name="testInvalidQueryFragment with data set #0" assertions="1" time="0.005284"/>
        <testcase name="testInvalidQueryFragment with data set #1" assertions="1" time="0.004858"/>
        <testcase name="testInvalidQueryFragment with data set #2" assertions="1" time="0.005008"/>
        <testcase name="testInvalidQueryFragment with data set #3" assertions="1" time="0.004880"/>
        <testcase name="testInvalidQueryFragment with data set #4" assertions="1" time="0.004918"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testEncodeInvalidQueryFragment" tests="5" assertions="5" failures="0" errors="0" time="0.030994">
        <testcase name="testEncodeInvalidQueryFragment with data set #0" assertions="1" time="0.006108"/>
        <testcase name="testEncodeInvalidQueryFragment with data set #1" assertions="1" time="0.006073"/>
        <testcase name="testEncodeInvalidQueryFragment with data set #2" assertions="1" time="0.006449"/>
        <testcase name="testEncodeInvalidQueryFragment with data set #3" assertions="1" time="0.006197"/>
        <testcase name="testEncodeInvalidQueryFragment with data set #4" assertions="1" time="0.006167"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testEncodeValidQueryFragment" tests="5" assertions="5" failures="0" errors="0" time="0.028949">
        <testcase name="testEncodeValidQueryFragment with data set #0" assertions="1" time="0.006012"/>
        <testcase name="testEncodeValidQueryFragment with data set #1" assertions="1" time="0.005508"/>
        <testcase name="testEncodeValidQueryFragment with data set #2" assertions="1" time="0.006002"/>
        <testcase name="testEncodeValidQueryFragment with data set #3" assertions="1" time="0.005922"/>
        <testcase name="testEncodeValidQueryFragment with data set #4" assertions="1" time="0.005505"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidateUserInfoValid" tests="8" assertions="8" failures="0" errors="0" time="0.038409">
        <testcase name="testValidateUserInfoValid with data set #0" assertions="1" time="0.004807"/>
        <testcase name="testValidateUserInfoValid with data set #1" assertions="1" time="0.004745"/>
        <testcase name="testValidateUserInfoValid with data set #2" assertions="1" time="0.004731"/>
        <testcase name="testValidateUserInfoValid with data set #3" assertions="1" time="0.004803"/>
        <testcase name="testValidateUserInfoValid with data set #4" assertions="1" time="0.004766"/>
        <testcase name="testValidateUserInfoValid with data set #5" assertions="1" time="0.004788"/>
        <testcase name="testValidateUserInfoValid with data set #6" assertions="1" time="0.004934"/>
        <testcase name="testValidateUserInfoValid with data set #7" assertions="1" time="0.004835"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidateUserInfoInvalid" tests="3" assertions="3" failures="0" errors="0" time="0.014457">
        <testcase name="testValidateUserInfoInvalid with data set #0" assertions="1" time="0.004858"/>
        <testcase name="testValidateUserInfoInvalid with data set #1" assertions="1" time="0.004793"/>
        <testcase name="testValidateUserInfoInvalid with data set #2" assertions="1" time="0.004806"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testEncodeUserInfoValid" tests="8" assertions="8" failures="0" errors="0" time="0.046508">
        <testcase name="testEncodeUserInfoValid with data set #0" assertions="1" time="0.005961"/>
        <testcase name="testEncodeUserInfoValid with data set #1" assertions="1" time="0.005974"/>
        <testcase name="testEncodeUserInfoValid with data set #2" assertions="1" time="0.005578"/>
        <testcase name="testEncodeUserInfoValid with data set #3" assertions="1" time="0.005956"/>
        <testcase name="testEncodeUserInfoValid with data set #4" assertions="1" time="0.005523"/>
        <testcase name="testEncodeUserInfoValid with data set #5" assertions="1" time="0.005973"/>
        <testcase name="testEncodeUserInfoValid with data set #6" assertions="1" time="0.005592"/>
        <testcase name="testEncodeUserInfoValid with data set #7" assertions="1" time="0.005951"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testEncodeUserInfoInvalid" tests="3" assertions="3" failures="0" errors="0" time="0.018339">
        <testcase name="testEncodeUserInfoInvalid with data set #0" assertions="1" time="0.006134"/>
        <testcase name="testEncodeUserInfoInvalid with data set #1" assertions="1" time="0.006103"/>
        <testcase name="testEncodeUserInfoInvalid with data set #2" assertions="1" time="0.006102"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidatePortValid" tests="5" assertions="5" failures="0" errors="0" time="0.023857">
        <testcase name="testValidatePortValid with data set #0" assertions="1" time="0.004780"/>
        <testcase name="testValidatePortValid with data set #1" assertions="1" time="0.004791"/>
        <testcase name="testValidatePortValid with data set #2" assertions="1" time="0.004768"/>
        <testcase name="testValidatePortValid with data set #3" assertions="1" time="0.004739"/>
        <testcase name="testValidatePortValid with data set #4" assertions="1" time="0.004779"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testValidatePortInvalid" tests="8" assertions="8" failures="0" errors="0" time="0.038256">
        <testcase name="testValidatePortInvalid with data set #0" assertions="1" time="0.004814"/>
        <testcase name="testValidatePortInvalid with data set #1" assertions="1" time="0.004771"/>
        <testcase name="testValidatePortInvalid with data set #2" assertions="1" time="0.004792"/>
        <testcase name="testValidatePortInvalid with data set #3" assertions="1" time="0.004837"/>
        <testcase name="testValidatePortInvalid with data set #4" assertions="1" time="0.004749"/>
        <testcase name="testValidatePortInvalid with data set #5" assertions="1" time="0.004709"/>
        <testcase name="testValidatePortInvalid with data set #6" assertions="1" time="0.004759"/>
        <testcase name="testValidatePortInvalid with data set #7" assertions="1" time="0.004825"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testRelativeUriResolvingRfcSamples" tests="39" assertions="39" failures="0" errors="0" time="0.391336">
        <testcase name="testRelativeUriResolvingRfcSamples with data set #0" assertions="1" time="0.006090"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #1" assertions="1" time="0.010273"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #2" assertions="1" time="0.010304"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #3" assertions="1" time="0.009891"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #4" assertions="1" time="0.009769"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #5" assertions="1" time="0.009028"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #6" assertions="1" time="0.010153"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #7" assertions="1" time="0.010483"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #8" assertions="1" time="0.010483"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #9" assertions="1" time="0.010547"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #10" assertions="1" time="0.010579"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #11" assertions="1" time="0.010640"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #12" assertions="1" time="0.010218"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #13" assertions="1" time="0.010329"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #14" assertions="1" time="0.010618"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #15" assertions="1" time="0.010236"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #16" assertions="1" time="0.010200"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #17" assertions="1" time="0.010254"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #18" assertions="1" time="0.010243"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #19" assertions="1" time="0.010300"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #20" assertions="1" time="0.010017"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #21" assertions="1" time="0.010390"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #22" assertions="1" time="0.010139"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #23" assertions="1" time="0.010283"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #24" assertions="1" time="0.010303"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #25" assertions="1" time="0.010433"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #26" assertions="1" time="0.010215"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #27" assertions="1" time="0.010180"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #28" assertions="1" time="0.010130"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #29" assertions="1" time="0.010323"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #30" assertions="1" time="0.010224"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #31" assertions="1" time="0.010331"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #32" assertions="1" time="0.010254"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #33" assertions="1" time="0.010357"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #34" assertions="1" time="0.010348"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #35" assertions="1" time="0.010336"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #36" assertions="1" time="0.009702"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #37" assertions="1" time="0.010174"/>
        <testcase name="testRelativeUriResolvingRfcSamples with data set #38" assertions="1" time="0.006560"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testRemovePathDotSegments" tests="2" assertions="2" failures="0" errors="0" time="0.011268">
        <testcase name="testRemovePathDotSegments with data set #0" assertions="1" time="0.005664"/>
        <testcase name="testRemovePathDotSegments with data set #1" assertions="1" time="0.005604"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testNormalizeUrl" tests="19" assertions="19" failures="0" errors="0" time="0.143242">
        <testcase name="testNormalizeUrl with data set #0" assertions="1" time="0.008084"/>
        <testcase name="testNormalizeUrl with data set #1" assertions="1" time="0.008599"/>
        <testcase name="testNormalizeUrl with data set #2" assertions="1" time="0.009169"/>
        <testcase name="testNormalizeUrl with data set #3" assertions="1" time="0.007185"/>
        <testcase name="testNormalizeUrl with data set #4" assertions="1" time="0.007755"/>
        <testcase name="testNormalizeUrl with data set #5" assertions="1" time="0.007072"/>
        <testcase name="testNormalizeUrl with data set #6" assertions="1" time="0.008449"/>
        <testcase name="testNormalizeUrl with data set #7" assertions="1" time="0.007597"/>
        <testcase name="testNormalizeUrl with data set #8" assertions="1" time="0.007115"/>
        <testcase name="testNormalizeUrl with data set #9" assertions="1" time="0.007020"/>
        <testcase name="testNormalizeUrl with data set #10" assertions="1" time="0.007103"/>
        <testcase name="testNormalizeUrl with data set #11" assertions="1" time="0.006712"/>
        <testcase name="testNormalizeUrl with data set #12" assertions="1" time="0.006918"/>
        <testcase name="testNormalizeUrl with data set #13" assertions="1" time="0.006911"/>
        <testcase name="testNormalizeUrl with data set #14" assertions="1" time="0.006914"/>
        <testcase name="testNormalizeUrl with data set #15" assertions="1" time="0.006505"/>
        <testcase name="testNormalizeUrl with data set #16" assertions="1" time="0.006641"/>
        <testcase name="testNormalizeUrl with data set #17" assertions="1" time="0.008705"/>
        <testcase name="testNormalizeUrl with data set #18" assertions="1" time="0.008788"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testMergeToNewUri" tests="39" assertions="39" failures="0" errors="0" time="0.396636">
        <testcase name="testMergeToNewUri with data set #0" assertions="1" time="0.006731"/>
        <testcase name="testMergeToNewUri with data set #1" assertions="1" time="0.010403"/>
        <testcase name="testMergeToNewUri with data set #2" assertions="1" time="0.010220"/>
        <testcase name="testMergeToNewUri with data set #3" assertions="1" time="0.009915"/>
        <testcase name="testMergeToNewUri with data set #4" assertions="1" time="0.009868"/>
        <testcase name="testMergeToNewUri with data set #5" assertions="1" time="0.009181"/>
        <testcase name="testMergeToNewUri with data set #6" assertions="1" time="0.010457"/>
        <testcase name="testMergeToNewUri with data set #7" assertions="1" time="0.010626"/>
        <testcase name="testMergeToNewUri with data set #8" assertions="1" time="0.010802"/>
        <testcase name="testMergeToNewUri with data set #9" assertions="1" time="0.010740"/>
        <testcase name="testMergeToNewUri with data set #10" assertions="1" time="0.010599"/>
        <testcase name="testMergeToNewUri with data set #11" assertions="1" time="0.010626"/>
        <testcase name="testMergeToNewUri with data set #12" assertions="1" time="0.010404"/>
        <testcase name="testMergeToNewUri with data set #13" assertions="1" time="0.009774"/>
        <testcase name="testMergeToNewUri with data set #14" assertions="1" time="0.010834"/>
        <testcase name="testMergeToNewUri with data set #15" assertions="1" time="0.010409"/>
        <testcase name="testMergeToNewUri with data set #16" assertions="1" time="0.010405"/>
        <testcase name="testMergeToNewUri with data set #17" assertions="1" time="0.010469"/>
        <testcase name="testMergeToNewUri with data set #18" assertions="1" time="0.010408"/>
        <testcase name="testMergeToNewUri with data set #19" assertions="1" time="0.010441"/>
        <testcase name="testMergeToNewUri with data set #20" assertions="1" time="0.010410"/>
        <testcase name="testMergeToNewUri with data set #21" assertions="1" time="0.010355"/>
        <testcase name="testMergeToNewUri with data set #22" assertions="1" time="0.010075"/>
        <testcase name="testMergeToNewUri with data set #23" assertions="1" time="0.010477"/>
        <testcase name="testMergeToNewUri with data set #24" assertions="1" time="0.010560"/>
        <testcase name="testMergeToNewUri with data set #25" assertions="1" time="0.010273"/>
        <testcase name="testMergeToNewUri with data set #26" assertions="1" time="0.009947"/>
        <testcase name="testMergeToNewUri with data set #27" assertions="1" time="0.010248"/>
        <testcase name="testMergeToNewUri with data set #28" assertions="1" time="0.010464"/>
        <testcase name="testMergeToNewUri with data set #29" assertions="1" time="0.010210"/>
        <testcase name="testMergeToNewUri with data set #30" assertions="1" time="0.009712"/>
        <testcase name="testMergeToNewUri with data set #31" assertions="1" time="0.010346"/>
        <testcase name="testMergeToNewUri with data set #32" assertions="1" time="0.010358"/>
        <testcase name="testMergeToNewUri with data set #33" assertions="1" time="0.010481"/>
        <testcase name="testMergeToNewUri with data set #34" assertions="1" time="0.010035"/>
        <testcase name="testMergeToNewUri with data set #35" assertions="1" time="0.010450"/>
        <testcase name="testMergeToNewUri with data set #36" assertions="1" time="0.010723"/>
        <testcase name="testMergeToNewUri with data set #37" assertions="1" time="0.011811"/>
        <testcase name="testMergeToNewUri with data set #38" assertions="1" time="0.006389"/>
      </testsuite>
      <testcase name="testMergeTwoObjectsNotModifying" class="Eloquent\Schemer\Uri\UriTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Uri/UriTest.php" line="707" assertions="4" time="0.012192"/>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testMakeRelative" tests="6" assertions="6" failures="0" errors="0" time="0.069506">
        <testcase name="testMakeRelative with data set #0" assertions="1" time="0.011668"/>
        <testcase name="testMakeRelative with data set #1" assertions="1" time="0.011880"/>
        <testcase name="testMakeRelative with data set #2" assertions="1" time="0.012030"/>
        <testcase name="testMakeRelative with data set #3" assertions="1" time="0.011840"/>
        <testcase name="testMakeRelative with data set #4" assertions="1" time="0.011020"/>
        <testcase name="testMakeRelative with data set #5" assertions="1" time="0.011068"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testConstructorCopyExistingObject" tests="30" assertions="30" failures="0" errors="0" time="0.506706">
        <testcase name="testConstructorCopyExistingObject with data set #0" assertions="1" time="0.015895"/>
        <testcase name="testConstructorCopyExistingObject with data set #1" assertions="1" time="0.018277"/>
        <testcase name="testConstructorCopyExistingObject with data set #2" assertions="1" time="0.018718"/>
        <testcase name="testConstructorCopyExistingObject with data set #3" assertions="1" time="0.015348"/>
        <testcase name="testConstructorCopyExistingObject with data set #4" assertions="1" time="0.015641"/>
        <testcase name="testConstructorCopyExistingObject with data set #5" assertions="1" time="0.015634"/>
        <testcase name="testConstructorCopyExistingObject with data set #6" assertions="1" time="0.015725"/>
        <testcase name="testConstructorCopyExistingObject with data set #7" assertions="1" time="0.015856"/>
        <testcase name="testConstructorCopyExistingObject with data set #8" assertions="1" time="0.015518"/>
        <testcase name="testConstructorCopyExistingObject with data set #9" assertions="1" time="0.018505"/>
        <testcase name="testConstructorCopyExistingObject with data set #10" assertions="1" time="0.018656"/>
        <testcase name="testConstructorCopyExistingObject with data set #11" assertions="1" time="0.018618"/>
        <testcase name="testConstructorCopyExistingObject with data set #12" assertions="1" time="0.018997"/>
        <testcase name="testConstructorCopyExistingObject with data set #13" assertions="1" time="0.018705"/>
        <testcase name="testConstructorCopyExistingObject with data set #14" assertions="1" time="0.018456"/>
        <testcase name="testConstructorCopyExistingObject with data set #15" assertions="1" time="0.018506"/>
        <testcase name="testConstructorCopyExistingObject with data set #16" assertions="1" time="0.015703"/>
        <testcase name="testConstructorCopyExistingObject with data set #17" assertions="1" time="0.015962"/>
        <testcase name="testConstructorCopyExistingObject with data set #18" assertions="1" time="0.015512"/>
        <testcase name="testConstructorCopyExistingObject with data set #19" assertions="1" time="0.018102"/>
        <testcase name="testConstructorCopyExistingObject with data set #20" assertions="1" time="0.018687"/>
        <testcase name="testConstructorCopyExistingObject with data set #21" assertions="1" time="0.015448"/>
        <testcase name="testConstructorCopyExistingObject with data set #22" assertions="1" time="0.017152"/>
        <testcase name="testConstructorCopyExistingObject with data set #23" assertions="1" time="0.015484"/>
        <testcase name="testConstructorCopyExistingObject with data set #24" assertions="1" time="0.015525"/>
        <testcase name="testConstructorCopyExistingObject with data set #25" assertions="1" time="0.018812"/>
        <testcase name="testConstructorCopyExistingObject with data set #26" assertions="1" time="0.015939"/>
        <testcase name="testConstructorCopyExistingObject with data set #27" assertions="1" time="0.015990"/>
        <testcase name="testConstructorCopyExistingObject with data set #28" assertions="1" time="0.015895"/>
        <testcase name="testConstructorCopyExistingObject with data set #29" assertions="1" time="0.015440"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testConstructorInvalidInput" tests="5" assertions="5" failures="0" errors="0" time="0.025668">
        <testcase name="testConstructorInvalidInput with data set #0" assertions="1" time="0.005163"/>
        <testcase name="testConstructorInvalidInput with data set #1" assertions="1" time="0.005093"/>
        <testcase name="testConstructorInvalidInput with data set #2" assertions="1" time="0.005110"/>
        <testcase name="testConstructorInvalidInput with data set #3" assertions="1" time="0.005147"/>
        <testcase name="testConstructorInvalidInput with data set #4" assertions="1" time="0.005155"/>
      </testsuite>
      <testsuite name="Eloquent\Schemer\Uri\UriTest::testFluentInterface" tests="10" assertions="10" failures="0" errors="0" time="0.056943">
        <testcase name="testFluentInterface with data set #0" assertions="1" time="0.004890"/>
        <testcase name="testFluentInterface with data set #1" assertions="1" time="0.004850"/>
        <testcase name="testFluentInterface with data set #2" assertions="1" time="0.006059"/>
        <testcase name="testFluentInterface with data set #3" assertions="1" time="0.004837"/>
        <testcase name="testFluentInterface with data set #4" assertions="1" time="0.004751"/>
        <testcase name="testFluentInterface with data set #5" assertions="1" time="0.004806"/>
        <testcase name="testFluentInterface with data set #6" assertions="1" time="0.004752"/>
        <testcase name="testFluentInterface with data set #7" assertions="1" time="0.008443"/>
        <testcase name="testFluentInterface with data set #8" assertions="1" time="0.008602"/>
        <testcase name="testFluentInterface with data set #9" assertions="1" time="0.004953"/>
      </testsuite>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Validation\ConstraintValidatorTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Validation/ConstraintValidatorTest.php" namespace="Eloquent\Schemer\Validation" fullPackage="Eloquent.Schemer.Validation" tests="156" assertions="156" failures="0" errors="0" time="11.852787">
      <testsuite name="Eloquent\Schemer\Validation\ConstraintValidatorTest::testValidateSchema" tests="156" assertions="156" failures="0" errors="0" time="11.852787">
        <testcase name="testValidateSchema with data set &quot;dependencies / schema-dependency.json / valid - dependant&quot;" assertions="1" time="0.110967"/>
        <testcase name="testValidateSchema with data set &quot;dependencies / schema-dependency.json / valid - not dependant&quot;" assertions="1" time="0.094832"/>
        <testcase name="testValidateSchema with data set &quot;dependencies / schema-dependency.json / valid non-object&quot;" assertions="1" time="0.098956"/>
        <testcase name="testValidateSchema with data set &quot;dependencies / schema-dependency.json / invalid&quot;" assertions="1" time="0.101833"/>
        <testcase name="testValidateSchema with data set &quot;dependencies / property-dependency.json / valid - dependant&quot;" assertions="1" time="0.065397"/>
        <testcase name="testValidateSchema with data set &quot;dependencies / property-dependency.json / valid - not dependant&quot;" assertions="1" time="0.063429"/>
        <testcase name="testValidateSchema with data set &quot;dependencies / property-dependency.json / valid non-object&quot;" assertions="1" time="0.063315"/>
        <testcase name="testValidateSchema with data set &quot;dependencies / property-dependency.json / invalid&quot;" assertions="1" time="0.065522"/>
        <testcase name="testValidateSchema with data set &quot;maxLength / maxLength.json / valid string&quot;" assertions="1" time="0.046780"/>
        <testcase name="testValidateSchema with data set &quot;maxLength / maxLength.json / valid non-string&quot;" assertions="1" time="0.046191"/>
        <testcase name="testValidateSchema with data set &quot;maxLength / maxLength.json / invalid&quot;" assertions="1" time="0.052454"/>
        <testcase name="testValidateSchema with data set &quot;oneOf / single-schema.json / valid&quot;" assertions="1" time="0.089108"/>
        <testcase name="testValidateSchema with data set &quot;oneOf / single-schema.json / invalid&quot;" assertions="1" time="0.088303"/>
        <testcase name="testValidateSchema with data set &quot;oneOf / multiple-schemas.json / valid&quot;" assertions="1" time="0.149243"/>
        <testcase name="testValidateSchema with data set &quot;oneOf / multiple-schemas.json / invalid - none matching&quot;" assertions="1" time="0.146942"/>
        <testcase name="testValidateSchema with data set &quot;oneOf / multiple-schemas.json / invalid - more than one matching&quot;" assertions="1" time="0.147136"/>
        <testcase name="testValidateSchema with data set &quot;maxItems / maxItems.json / valid array&quot;" assertions="1" time="0.048056"/>
        <testcase name="testValidateSchema with data set &quot;maxItems / maxItems.json / valid non-array&quot;" assertions="1" time="0.046956"/>
        <testcase name="testValidateSchema with data set &quot;maxItems / maxItems.json / invalid&quot;" assertions="1" time="0.047567"/>
        <testcase name="testValidateSchema with data set &quot;properties / property-schema-cascade.json / valid object&quot;" assertions="1" time="0.255239"/>
        <testcase name="testValidateSchema with data set &quot;properties / property-schema-cascade.json / valid non-object&quot;" assertions="1" time="0.215195"/>
        <testcase name="testValidateSchema with data set &quot;properties / property-schema-cascade.json / invalid&quot;" assertions="1" time="0.254580"/>
        <testcase name="testValidateSchema with data set &quot;properties / multiple-patternProperties.json / valid&quot;" assertions="1" time="0.132446"/>
        <testcase name="testValidateSchema with data set &quot;properties / multiple-patternProperties.json / invalid&quot;" assertions="1" time="0.137999"/>
        <testcase name="testValidateSchema with data set &quot;properties / additionalProperties-schema.json / valid&quot;" assertions="1" time="0.112777"/>
        <testcase name="testValidateSchema with data set &quot;properties / additionalProperties-schema.json / invalid&quot;" assertions="1" time="0.112882"/>
        <testcase name="testValidateSchema with data set &quot;properties / additionalProperties-true.json / valid&quot;" assertions="1" time="0.083243"/>
        <testcase name="testValidateSchema with data set &quot;properties / additionalProperties-false.json / valid&quot;" assertions="1" time="0.104197"/>
        <testcase name="testValidateSchema with data set &quot;properties / additionalProperties-false.json / invalid&quot;" assertions="1" time="0.090063"/>
        <testcase name="testValidateSchema with data set &quot;properties / multiple-properties.json / valid&quot;" assertions="1" time="0.132176"/>
        <testcase name="testValidateSchema with data set &quot;properties / multiple-properties.json / invalid&quot;" assertions="1" time="0.134958"/>
        <testcase name="testValidateSchema with data set &quot;not / not.json / valid integer&quot;" assertions="1" time="0.071573"/>
        <testcase name="testValidateSchema with data set &quot;not / not.json / valid floating point value&quot;" assertions="1" time="0.070823"/>
        <testcase name="testValidateSchema with data set &quot;not / not.json / invalid&quot;" assertions="1" time="0.071193"/>
        <testcase name="testValidateSchema with data set &quot;items / additionalItems-schema.json / valid array&quot;" assertions="1" time="0.109460"/>
        <testcase name="testValidateSchema with data set &quot;items / additionalItems-schema.json / valid non-array&quot;" assertions="1" time="0.106721"/>
        <testcase name="testValidateSchema with data set &quot;items / additionalItems-schema.json / invalid&quot;" assertions="1" time="0.120648"/>
        <testcase name="testValidateSchema with data set &quot;items / single-schema.json / valid&quot;" assertions="1" time="0.081388"/>
        <testcase name="testValidateSchema with data set &quot;items / single-schema.json / invalid&quot;" assertions="1" time="0.081570"/>
        <testcase name="testValidateSchema with data set &quot;items / multiple-schemas.json / valid&quot;" assertions="1" time="0.137508"/>
        <testcase name="testValidateSchema with data set &quot;items / multiple-schemas.json / invalid&quot;" assertions="1" time="0.139785"/>
        <testcase name="testValidateSchema with data set &quot;items / additionalItems-false.json / valid&quot;" assertions="1" time="0.111212"/>
        <testcase name="testValidateSchema with data set &quot;items / additionalItems-false.json / invalid&quot;" assertions="1" time="0.118544"/>
        <testcase name="testValidateSchema with data set &quot;minLength / minLength.json / valid string&quot;" assertions="1" time="0.049710"/>
        <testcase name="testValidateSchema with data set &quot;minLength / minLength.json / valid non-string&quot;" assertions="1" time="0.049238"/>
        <testcase name="testValidateSchema with data set &quot;minLength / minLength.json / invalid&quot;" assertions="1" time="0.050249"/>
        <testcase name="testValidateSchema with data set &quot;required / required.json / valid object&quot;" assertions="1" time="0.059298"/>
        <testcase name="testValidateSchema with data set &quot;required / required.json / valid non-object&quot;" assertions="1" time="0.059459"/>
        <testcase name="testValidateSchema with data set &quot;required / required.json / invalid&quot;" assertions="1" time="0.060995"/>
        <testcase name="testValidateSchema with data set &quot;anyOf / single-schema.json / valid&quot;" assertions="1" time="0.078528"/>
        <testcase name="testValidateSchema with data set &quot;anyOf / single-schema.json / invalid&quot;" assertions="1" time="0.077235"/>
        <testcase name="testValidateSchema with data set &quot;anyOf / multiple-schemas.json / valid string&quot;" assertions="1" time="0.102166"/>
        <testcase name="testValidateSchema with data set &quot;anyOf / multiple-schemas.json / valid object&quot;" assertions="1" time="0.108834"/>
        <testcase name="testValidateSchema with data set &quot;anyOf / multiple-schemas.json / invalid&quot;" assertions="1" time="0.103328"/>
        <testcase name="testValidateSchema with data set &quot;format / ipv4.json / valid IP address&quot;" assertions="1" time="0.047333"/>
        <testcase name="testValidateSchema with data set &quot;format / ipv4.json / valid non-string&quot;" assertions="1" time="0.046351"/>
        <testcase name="testValidateSchema with data set &quot;format / ipv4.json / invalid string&quot;" assertions="1" time="0.047365"/>
        <testcase name="testValidateSchema with data set &quot;format / ipv4.json / invalid IPv6 address&quot;" assertions="1" time="0.047291"/>
        <testcase name="testValidateSchema with data set &quot;format / hostname.json / valid hostname&quot;" assertions="1" time="0.048630"/>
        <testcase name="testValidateSchema with data set &quot;format / hostname.json / valid non-string&quot;" assertions="1" time="0.046437"/>
        <testcase name="testValidateSchema with data set &quot;format / hostname.json / invalid string&quot;" assertions="1" time="0.073075"/>
        <testcase name="testValidateSchema with data set &quot;format / hostname.json / invalid IP address&quot;" assertions="1" time="0.048370"/>
        <testcase name="testValidateSchema with data set &quot;format / uri.json / valid URI&quot;" assertions="1" time="0.048022"/>
        <testcase name="testValidateSchema with data set &quot;format / uri.json / valid non-string&quot;" assertions="1" time="0.046529"/>
        <testcase name="testValidateSchema with data set &quot;format / uri.json / invalid&quot;" assertions="1" time="0.048166"/>
        <testcase name="testValidateSchema with data set &quot;format / date-time.json / valid date/time (zulu)&quot;" assertions="1" time="0.047374"/>
        <testcase name="testValidateSchema with data set &quot;format / date-time.json / valid date/time (offset with colon)&quot;" assertions="1" time="0.047655"/>
        <testcase name="testValidateSchema with data set &quot;format / date-time.json / valid date/time (offset without colon)&quot;" assertions="1" time="0.047118"/>
        <testcase name="testValidateSchema with data set &quot;format / date-time.json / valid non-string&quot;" assertions="1" time="0.047059"/>
        <testcase name="testValidateSchema with data set &quot;format / date-time.json / invalid&quot;" assertions="1" time="0.047507"/>
        <testcase name="testValidateSchema with data set &quot;format / email.json / valid email&quot;" assertions="1" time="0.049193"/>
        <testcase name="testValidateSchema with data set &quot;format / email.json / valid non-string&quot;" assertions="1" time="0.046699"/>
        <testcase name="testValidateSchema with data set &quot;format / email.json / invalid&quot;" assertions="1" time="0.047203"/>
        <testcase name="testValidateSchema with data set &quot;format / ipv6.json / valid IP address&quot;" assertions="1" time="0.048043"/>
        <testcase name="testValidateSchema with data set &quot;format / ipv6.json / valid non-string&quot;" assertions="1" time="0.047422"/>
        <testcase name="testValidateSchema with data set &quot;format / ipv6.json / invalid string&quot;" assertions="1" time="0.048163"/>
        <testcase name="testValidateSchema with data set &quot;format / ipv6.json / invalid IPv4 address&quot;" assertions="1" time="0.048263"/>
        <testcase name="testValidateSchema with data set &quot;maximum / maximum-integer.json / valid integers&quot;" assertions="1" time="0.075838"/>
        <testcase name="testValidateSchema with data set &quot;maximum / maximum-integer.json / valid floating-point values&quot;" assertions="1" time="0.073214"/>
        <testcase name="testValidateSchema with data set &quot;maximum / maximum-integer.json / valid non-number&quot;" assertions="1" time="0.066464"/>
        <testcase name="testValidateSchema with data set &quot;maximum / maximum-integer.json / invalid&quot;" assertions="1" time="0.075644"/>
        <testcase name="testValidateSchema with data set &quot;maximum / maximum-floating-point-value.json / valid floating-point values&quot;" assertions="1" time="0.073426"/>
        <testcase name="testValidateSchema with data set &quot;maximum / maximum-floating-point-value.json / valid integers&quot;" assertions="1" time="0.074644"/>
        <testcase name="testValidateSchema with data set &quot;maximum / maximum-floating-point-value.json / valid non-number&quot;" assertions="1" time="0.066650"/>
        <testcase name="testValidateSchema with data set &quot;maximum / maximum-floating-point-value.json / invalid&quot;" assertions="1" time="0.075789"/>
        <testcase name="testValidateSchema with data set &quot;pattern / pattern.json / valid string a&quot;" assertions="1" time="0.049355"/>
        <testcase name="testValidateSchema with data set &quot;pattern / pattern.json / valid string b&quot;" assertions="1" time="0.048451"/>
        <testcase name="testValidateSchema with data set &quot;pattern / pattern.json / valid non-string&quot;" assertions="1" time="0.049629"/>
        <testcase name="testValidateSchema with data set &quot;pattern / pattern.json / invalid&quot;" assertions="1" time="0.050377"/>
        <testcase name="testValidateSchema with data set &quot;multipleOf / multipleOf-integer.json / valid integers&quot;" assertions="1" time="0.077012"/>
        <testcase name="testValidateSchema with data set &quot;multipleOf / multipleOf-integer.json / valid floating point values&quot;" assertions="1" time="0.076577"/>
        <testcase name="testValidateSchema with data set &quot;multipleOf / multipleOf-integer.json / valid non-number&quot;" assertions="1" time="0.069704"/>
        <testcase name="testValidateSchema with data set &quot;multipleOf / multipleOf-integer.json / invalid&quot;" assertions="1" time="0.077655"/>
        <testcase name="testValidateSchema with data set &quot;multipleOf / multipleOf-floating-point-value.json / valid floating point values&quot;" assertions="1" time="0.108966"/>
        <testcase name="testValidateSchema with data set &quot;multipleOf / multipleOf-floating-point-value.json / valid integers&quot;" assertions="1" time="0.075681"/>
        <testcase name="testValidateSchema with data set &quot;multipleOf / multipleOf-floating-point-value.json / valid non-number&quot;" assertions="1" time="0.070073"/>
        <testcase name="testValidateSchema with data set &quot;multipleOf / multipleOf-floating-point-value.json / invalid&quot;" assertions="1" time="0.077301"/>
        <testcase name="testValidateSchema with data set &quot;maxDateTime / maxDateTime.toml / valid date/time&quot;" assertions="1" time="0.084443"/>
        <testcase name="testValidateSchema with data set &quot;maxDateTime / maxDateTime.toml / valid non-date/time&quot;" assertions="1" time="0.082579"/>
        <testcase name="testValidateSchema with data set &quot;maxDateTime / maxDateTime.toml / invalid&quot;" assertions="1" time="0.087269"/>
        <testcase name="testValidateSchema with data set &quot;type / string-type.json / valid&quot;" assertions="1" time="0.058151"/>
        <testcase name="testValidateSchema with data set &quot;type / string-type.json / invalid&quot;" assertions="1" time="0.057711"/>
        <testcase name="testValidateSchema with data set &quot;type / number-type.json / valid floating point value&quot;" assertions="1" time="0.054374"/>
        <testcase name="testValidateSchema with data set &quot;type / number-type.json / valid integer&quot;" assertions="1" time="0.054431"/>
        <testcase name="testValidateSchema with data set &quot;type / number-type.json / invalid&quot;" assertions="1" time="0.055027"/>
        <testcase name="testValidateSchema with data set &quot;type / boolean-type.json / valid&quot;" assertions="1" time="0.049541"/>
        <testcase name="testValidateSchema with data set &quot;type / boolean-type.json / invalid&quot;" assertions="1" time="0.051717"/>
        <testcase name="testValidateSchema with data set &quot;type / multiple-types.json / valid string&quot;" assertions="1" time="0.073845"/>
        <testcase name="testValidateSchema with data set &quot;type / multiple-types.json / valid object&quot;" assertions="1" time="0.075295"/>
        <testcase name="testValidateSchema with data set &quot;type / multiple-types.json / invalid&quot;" assertions="1" time="0.079638"/>
        <testcase name="testValidateSchema with data set &quot;type / integer-type.json / valid&quot;" assertions="1" time="0.054006"/>
        <testcase name="testValidateSchema with data set &quot;type / integer-type.json / invalid&quot;" assertions="1" time="0.055699"/>
        <testcase name="testValidateSchema with data set &quot;type / array-type.json / valid&quot;" assertions="1" time="0.051358"/>
        <testcase name="testValidateSchema with data set &quot;type / array-type.json / invalid&quot;" assertions="1" time="0.052865"/>
        <testcase name="testValidateSchema with data set &quot;type / null-type.json / valid&quot;" assertions="1" time="0.054013"/>
        <testcase name="testValidateSchema with data set &quot;type / null-type.json / invalid&quot;" assertions="1" time="0.055297"/>
        <testcase name="testValidateSchema with data set &quot;type / datetime-type.toml / valid&quot;" assertions="1" time="0.059577"/>
        <testcase name="testValidateSchema with data set &quot;type / datetime-type.toml / invalid&quot;" assertions="1" time="0.057853"/>
        <testcase name="testValidateSchema with data set &quot;type / object-type.json / valid&quot;" assertions="1" time="0.057667"/>
        <testcase name="testValidateSchema with data set &quot;type / object-type.json / invalid&quot;" assertions="1" time="0.068985"/>
        <testcase name="testValidateSchema with data set &quot;allOf / single-schema.json / valid&quot;" assertions="1" time="0.093554"/>
        <testcase name="testValidateSchema with data set &quot;allOf / single-schema.json / invalid&quot;" assertions="1" time="0.091008"/>
        <testcase name="testValidateSchema with data set &quot;allOf / multiple-schemas.json / valid&quot;" assertions="1" time="0.157387"/>
        <testcase name="testValidateSchema with data set &quot;allOf / multiple-schemas.json / one invalid&quot;" assertions="1" time="0.152455"/>
        <testcase name="testValidateSchema with data set &quot;allOf / multiple-schemas.json / all invalid&quot;" assertions="1" time="0.152289"/>
        <testcase name="testValidateSchema with data set &quot;minimum / minimum-integer.json / valid integers&quot;" assertions="1" time="0.074868"/>
        <testcase name="testValidateSchema with data set &quot;minimum / minimum-integer.json / valid floating-point values&quot;" assertions="1" time="0.116727"/>
        <testcase name="testValidateSchema with data set &quot;minimum / minimum-integer.json / valid non-number&quot;" assertions="1" time="0.066405"/>
        <testcase name="testValidateSchema with data set &quot;minimum / minimum-integer.json / invalid&quot;" assertions="1" time="0.077908"/>
        <testcase name="testValidateSchema with data set &quot;minimum / minimum-floating-point-value.json / valid floating-point values&quot;" assertions="1" time="0.073620"/>
        <testcase name="testValidateSchema with data set &quot;minimum / minimum-floating-point-value.json / valid integers&quot;" assertions="1" time="0.075198"/>
        <testcase name="testValidateSchema with data set &quot;minimum / minimum-floating-point-value.json / valid non-number&quot;" assertions="1" time="0.067011"/>
        <testcase name="testValidateSchema with data set &quot;minimum / minimum-floating-point-value.json / invalid&quot;" assertions="1" time="0.076307"/>
        <testcase name="testValidateSchema with data set &quot;maxProperties / maxProperties.json / valid object&quot;" assertions="1" time="0.049828"/>
        <testcase name="testValidateSchema with data set &quot;maxProperties / maxProperties.json / valid non-object&quot;" assertions="1" time="0.049068"/>
        <testcase name="testValidateSchema with data set &quot;maxProperties / maxProperties.json / invalid&quot;" assertions="1" time="0.049994"/>
        <testcase name="testValidateSchema with data set &quot;minProperties / minProperties.json / valid object&quot;" assertions="1" time="0.051520"/>
        <testcase name="testValidateSchema with data set &quot;minProperties / minProperties.json / valid non-object&quot;" assertions="1" time="0.051237"/>
        <testcase name="testValidateSchema with data set &quot;minProperties / minProperties.json / invalid&quot;" assertions="1" time="0.051987"/>
        <testcase name="testValidateSchema with data set &quot;uniqueItems / uniqueItems-true.json / valid array&quot;" assertions="1" time="0.049611"/>
        <testcase name="testValidateSchema with data set &quot;uniqueItems / uniqueItems-true.json / valid non-array&quot;" assertions="1" time="0.048215"/>
        <testcase name="testValidateSchema with data set &quot;uniqueItems / uniqueItems-true.json / invalid&quot;" assertions="1" time="0.049565"/>
        <testcase name="testValidateSchema with data set &quot;uniqueItems / uniqueItems-false.json / valid unique&quot;" assertions="1" time="0.047449"/>
        <testcase name="testValidateSchema with data set &quot;uniqueItems / uniqueItems-false.json / valid non-unique&quot;" assertions="1" time="0.047394"/>
        <testcase name="testValidateSchema with data set &quot;uniqueItems / uniqueItems-false.json / valid non-array&quot;" assertions="1" time="0.047277"/>
        <testcase name="testValidateSchema with data set &quot;minItems / minItems.json / valid array&quot;" assertions="1" time="0.051100"/>
        <testcase name="testValidateSchema with data set &quot;minItems / minItems.json / valid non-array&quot;" assertions="1" time="0.051262"/>
        <testcase name="testValidateSchema with data set &quot;minItems / minItems.json / invalid&quot;" assertions="1" time="0.051353"/>
        <testcase name="testValidateSchema with data set &quot;minDateTime / minDateTime.toml / valid date/time&quot;" assertions="1" time="0.084160"/>
        <testcase name="testValidateSchema with data set &quot;minDateTime / minDateTime.toml / valid non-date/time&quot;" assertions="1" time="0.081291"/>
        <testcase name="testValidateSchema with data set &quot;minDateTime / minDateTime.toml / invalid&quot;" assertions="1" time="0.086127"/>
        <testcase name="testValidateSchema with data set &quot;enum / single-value.json / valid&quot;" assertions="1" time="0.049800"/>
        <testcase name="testValidateSchema with data set &quot;enum / single-value.json / invalid&quot;" assertions="1" time="0.050556"/>
        <testcase name="testValidateSchema with data set &quot;enum / multiple-values.json / valid - first element&quot;" assertions="1" time="0.051018"/>
        <testcase name="testValidateSchema with data set &quot;enum / multiple-values.json / valid - middle element&quot;" assertions="1" time="0.052441"/>
        <testcase name="testValidateSchema with data set &quot;enum / multiple-values.json / invalid&quot;" assertions="1" time="0.054531"/>
      </testsuite>
    </testsuite>
    <testsuite name="Eloquent\Schemer\Validation\DefaultValueTransformTest" file="/home/travis/build/eloquent/schemer/test/suite/Eloquent/Schemer/Validation/DefaultValueTransformTest.php" namespace="Eloquent\Schemer\Validation" fullPackage="Eloquent.Schemer.Validation" tests="6" assertions="12" failures="0" errors="0" time="0.205971">
      <testsuite name="Eloquent\Schemer\Validation\DefaultValueTransformTest::testTransform" tests="6" assertions="12" failures="0" errors="0" time="0.205971">
        <testcase name="testTransform with data set &quot;array-items.json / array missing defaults&quot;" assertions="2" time="0.039358"/>
        <testcase name="testTransform with data set &quot;array-items.json / array not missing defaults&quot;" assertions="2" time="0.037248"/>
        <testcase name="testTransform with data set &quot;array-items.json / object unchanged&quot;" assertions="2" time="0.026715"/>
        <testcase name="testTransform with data set &quot;object-properties.json / object missing defaults&quot;" assertions="2" time="0.038433"/>
        <testcase name="testTransform with data set &quot;object-properties.json / object not missing defaults&quot;" assertions="2" time="0.037951"/>
        <testcase name="testTransform with data set &quot;object-properties.json / array unchanged&quot;" assertions="2" time="0.026266"/>
      </testsuite>
    </testsuite>
  </testsuite>
</testsuites>
